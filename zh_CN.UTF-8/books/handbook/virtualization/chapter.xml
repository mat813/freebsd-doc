<?xml version="1.0" encoding="utf-8"?>
<!--
     The FreeBSD Documentation Project
     The FreeBSD Simplified Chinese Project

     Original Revision: 1.25
     $FreeBSD$
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="virtualization">
  <info><title>虚拟化</title>
    <authorgroup>
      <author><personname><firstname>Murray</firstname><surname>Stokely</surname></personname><contrib>原作 </contrib></author>
    </authorgroup>
    
  </info>

  

  <sect1 xml:id="virtualization-synopsis">
    <title>概述</title>

    <para>虚拟化软件能够让同一台机器上同时运行多个操作系统。
      在 PC 上， 这种系统通常由一个运行虚拟化软件的宿主操作系统，
      以及一系列客户操作系统组成。</para>

    <para>读完这章， 您将了解：</para>

    <itemizedlist>
      <listitem>
	<para>宿主操作系统与客户操作系统的区别。</para>
      </listitem>

      <listitem>
	<para>如何在采用  &intel; 处理器的 &apple; &macintosh;
	  计算机上安装 &os;。</para>
      </listitem>

<!--
  Note:  There is no working/end-user ready Xen support for FreeBSD as of 07-2010.
         Hide all information regarding Xen under FreeBSD.

      <listitem>
	<para>如何在包含 <application>&xen;</application> 的 Linux 上安装 &os;。</para>
      </listitem>
-->
      <listitem>
	<para>如何在 &microsoft.windows; 以
	  <application>Virtual PC</application> 安装 &os;。</para>
      </listitem>

      <listitem>
	<para>如何针对虚拟化环境对 &os; 系统进行性能调优。</para>
      </listitem>
    </itemizedlist>

    <para>在阅读这章之前， 您应：</para>

    <itemizedlist>
      <listitem>
	<para>理解 &unix; 和 &os; 的基础知识 (<xref linkend="basics"/>)。</para>
      </listitem>

      <listitem><para>了解如何安装 &os; (<xref linkend="install"/>)。</para></listitem>

      <listitem><para>了解如何配置网络连接 (<xref linkend="advanced-networking"/>)。</para></listitem>

      <listitem><para>了解如何安装第三方软件
        (<xref linkend="ports"/>).</para></listitem>
    </itemizedlist>

  </sect1>



  <sect1 xml:id="virtualization-guest">
    <title>作为客户 OS 的 &os;</title>

    <sect2 xml:id="virtualization-guest-parallels">
      <title>MacOS 上的 Parallels</title>

      <para>为 &mac; 设计的 <application>Parallels Desktop</application>
	是一种可用于采用 &intel; 处理器， 并运行 &macos;
        10.4.6 或更高版本的 &apple; &mac; 计算机的商业软件。
        它为 &os; 系统提供了完整的支持。 在 &macos;
        X 上安装了这个软件之后， 用户需要配置虚拟机并安装所需的客户操作系统。</para>

	<sect3 xml:id="virtualization-guest-parallels-install">
	  <title>在 Parallels/&macos; X 上安装 &os;</title>

	  <para>在 &macos;
	    X/<application>Parallels</application> 上安装 FreeBSD 的第一步是创建一个新的虚拟机。
	    在系统提示选择客户 OS 类型 (<guimenu>Guest OS Type</guimenu>) 时选择 <guimenuitem>&os;</guimenuitem>，
	    并根据您使用 &os; 虚拟实例的需要分配磁盘和内存：</para>

	  <mediaobject>
            <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd1"/>
            </imageobject>
          </mediaobject>

	  <para>对多数在 <application>Parallels</application> 上使用
	    &os; 的情形而言， 4GB 磁盘空间和 512MB 的 RAM 就够用了：</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd2"/>
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd3"/>
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd4"/>
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd5"/>
	    </imageobject>
	  </mediaobject>

	  <para>选择使用的网络和网卡类型：</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd6"/>
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd7"/>
	    </imageobject>
	  </mediaobject>

	  <para>保存并完成配置：</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd8"/>
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
            <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd9"/>
            </imageobject>
          </mediaobject>

	  <para>在创建了 &os; 虚拟机之后， 还需要在其中安装 &os;。
	    最好的做法是使用官方的 &os; CDROM 或从官方 FTP 站点下载的 ISO 镜像来完成这个任务。
	    如果您的本地 &mac; 文件系统中有 ISO 映像文件， 或您的 &mac; 的 CD 驱动器中有
	    CDROM， 就可以在 &os;
	    <application>Parallels</application> 窗口的右下角点击光盘图标。
	    之后， 系统将给出一个窗口， 供您完成将虚拟机中的
	    CDROM 驱动器连接到本地的 ISO 文件或真正的 CDROM 驱动器上。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd11"/>
	    </imageobject>
	  </mediaobject>

	  <para>在完成了将 CDROM 与您的安装源完成关联之后，
	    就可以按重启 (reboot) 图标来重启 &os; 虚拟机了。
	    <application>Parallels</application> 将配合一个特殊的
	    BIOS 启动， 后者能够像普通的 BIOS 一样检查系统中是否有 CDROM 驱动器。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd10"/>
	    </imageobject>
	  </mediaobject>

	  <para>此时， 它就能够找到 &os; 安装介质并开始 <xref linkend="install"/>
	    中所介绍的标准的基于  <application>sysinstall</application> 安装的过程。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd12"/>
	    </imageobject>
	  </mediaobject>

	  <para>此时您可以安装 X11，
	    但暂时不要对它进行配置。 在完成安装之后， 重启并进入新安装的 &os; 虚拟机。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd13"/>
	    </imageobject>
	  </mediaobject>
	</sect3>

	<sect3 xml:id="virtualization-guest-parallels-configure">
	  <title>在 &macos; X/Parallels 上配置 &os;</title>

	  <para>在您将 &os; 安装到 &macos;
	    X 的 <application>Parallels</application> 上之后， 还需要进行一系列的配置，
	    以便为系统的虚拟化操作进行优化。</para>

          <procedure>
	    <step>
	      <title>配置引导加载器变量</title>

	      <para>最重要的一步是通过调低
	        <option>kern.hz</option> 变量来降低 <application>Parallels</application> 环境中的 &os;
		对 CPU 的使用。 这可以通过在
		<filename>/boot/loader.conf</filename> 中增加下述配置来完成：</para>

	  	<programlisting>kern.hz=100</programlisting>

	      <para>如果不使用这个配置， 闲置的 &os; <application>Parallels</application> 客户
		OS 会在单处理器的 &imac; 上使用大约 15% 的 CPU。 如此修改之后，
		空闲时的使用量就减少到大约 5% 了。</para>
	    </step>

	    <step>
	      <title>创建新的内核配置文件</title>

	      <para>您可以删去全部 SCSI、 FireWire， 以及 USB
	        设备驱动程序。 <application>Parallels</application> 提供了一个由 &man.ed.4; 驱动的虚拟网卡，
	        因此， 除了
	        &man.ed.4; 和 &man.miibus.4;
	        之外的其他网络接口驱动都可以从内核中删去。</para>
	    </step>

	    <step>
	      <title>配置网络</title>

	      <para>最基本的网络配置， 是通过使用 DHCP 来将您的虚拟机与宿主 &mac;
	        接入同一个局域网。 这可以通过在
	        <filename>/etc/rc.conf</filename> 中加入
	        <literal>ifconfig_ed0="DHCP"</literal> 来完成。
		更高级一些的网络配置方法， 请参见 <xref linkend="advanced-networking"/> 中的介绍。</para>
	    </step>
          </procedure>

      </sect3>

    </sect2>
<!--
Deactive/hide this section as the instruction in there do NOT work anyore:
- FreeBSD 7.0 has reached its EOL a long time ago.
- The needed files from www.fsmware.com are not available anymore, as the
  server is dead.  So it is impossible to follow the instructions in here.

jkois@FreeBSD.org, 2010-06-18

    <sect2 id="virtualization-guest-xen">
      <sect2info>
	<authorgroup>
	  <author>
            <firstname>福康</firstname>
	    <surname>陈 (Loader)</surname>
	    <contrib>原作 </contrib>
          </author>
        </authorgroup>

      </sect2info>

      <title>在 Linux 上通过 &xen; 运行 &os;</title>

	<para><application>&xen;</application> hypervisor 是一个开放源代码的并行虚拟化产品，
	  并由商业的 XenSource 公司提供支持。 在这种系统中， 客户操作系统称为 domU 域，
	  而宿主系统则称为 dom0。 在 Linux 上运行 &os; 虚拟机实例的第一步， 是安装用于
	  Linux dom0 的
	  <application>&xen;</application>。 在这个例子中，
	  宿主系统采用的发行版本是 Slackware Linux。</para>

	<sect3 id="xen-slackware-dom0">
	  <title>在 Linux dom0 上安装 &xen; 3</title>

	  <procedure>
	    <step>
	      <title>从 XenSource 下载 &xen; 3.0</title>

	      <para>从 <ulink url="http://www.xensource.com/"></ulink> 下载 <ulink
	        url="http://bits.xensource.com/oss-xen/release/3.0.4-1/src.tgz/xen-3.0.4_1-src.tgz">xen-3.0.4_1-src.tgz</ulink>。</para>

	    </step>

	    <step>
	      <title>解压缩源代码包</title>

              <screen>&prompt.root; <userinput>cd xen-3.0.4_1-src</userinput>
&prompt.root; <userinput>KERNELS="linux-2.6-xen0 linux-2.6-xenU" make world</userinput>
&prompt.root; <userinput>make install</userinput></screen>

            <note>
	      <para>为 dom0 重新编译内核：</para>

	      <screen>&prompt.root; <userinput>cd xen-3.0.4_1-src/linux-2.6.16.33-xen0</userinput>
&prompt.root; <userinput>make menuconfig</userinput>
&prompt.root; <userinput>make</userinput>
&prompt.root; <userinput>make install</userinput></screen>

	      <para>对于较早版本的 <application>&xen;</application>， 可能需要指定
	        <command>make ARCH=xen menuconfig</command></para>
	    </note>
	    </step>

	    <step>
	      <title>在 Grub 的 menu.lst 中增加一个对应的菜单项</title>

	      <para>编辑 <filename>/boot/grub/menu.lst</filename>
		并在其中增加下列配置：</para>

	      <programlisting>title Xen-3.0.4
root (hd0,0)
kernel /boot/xen-3.0.4-1.gz dom0_mem=262144
module /boot/vmlinuz-2.6.16.33-xen0 root=/dev/hda1 ro</programlisting>
            </step>

            <step>
              <title>重新启动计算机并进入 &xen;</title>

	      <para>首先， 编辑
		<filename>/etc/xen/xend-config.sxp</filename>，
		并在其中增加下列配置：</para>

	      <programlisting>(network-script 'network-bridge netdev=eth0')</programlisting>

	      <para>接下来就可以运行
		<application>&xen;</application> 了：</para>

              <screen>&prompt.root; <userinput>/etc/init.d/xend start</userinput>
&prompt.root; <userinput>/etc/init.d/xendomains start</userinput></screen>

	      <para>现在 dom0 已经开始运行：</para>

              <screen>&prompt.root; <userinput>xm list</userinput>
Name                                      ID   Mem VCPUs      State   Time(s)
Domain-0                                   0   256     1     r&ndash;&ndash;&ndash;&ndash;&ndash;  54452.9</screen>
            </step>
          </procedure>
        </sect3>

        <sect3>
          <title>&os; 7-CURRENT domU</title>

          <para>从 <ulink
            url="http://www.fsmware.com/">http://www.fsmware.com/</ulink>
	    下载用于 <application>&xen; 3.0</application> 的 &os; domU 内核。</para>

      <itemizedlist>
	<listitem>
	  <para><ulink url="http://www.fsmware.com/xenofreebsd/7.0/download/kernel-current">kernel-current</ulink></para>
	</listitem>

	<listitem>
	  <para><ulink url="http://www.fsmware.com/xenofreebsd/7.0/download/mdroot-7.0.bz2">mdroot-7.0.bz2</ulink></para>
	</listitem>

	<listitem>
	  <para><ulink url="http://www.fsmware.com/xenofreebsd/7.0/download/config/xmexample1.bsd">xmexample1.bsd</ulink></para>
	</listitem>
      </itemizedlist>

      <para>将配置文件 <filename>xmexample1.bsd</filename>
	放到 <filename>/etc/xen/</filename> 并修改与内核及磁盘映像位置有关的配置项。
	下面是一个示范的例子：</para>

      <programlisting>kernel = "/opt/kernel-current"
memory = 256
name = "freebsd"
vif = [ '' ]
disk = [ 'file:/opt/mdroot-7.0,hda1,w' ]
#on_crash    = 'preserve'
extra = "boot_verbose"
extra += ",boot_single"
extra += ",kern.hz=100"
extra += ",vfs.root.mountfrom=ufs:/dev/xbd769a"</programlisting>

      <para>其中， <filename>mdroot-7.0.bz2</filename> 应是未压缩的。</para>

      <para>接下来， 您需要修改 <filename>kernel-current</filename> 中的 __xen_guest
	小节， 并加入 <application>&xen; 3.0.3</application> 所需要的 VIRT_BASE：</para>

      <screen>&prompt.root; <userinput>objcopy kernel-current -R __xen_guest</userinput>
&prompt.root; <userinput>perl -e 'print "LOADER=generic,GUEST_OS=freebsd,GUEST_VER=7.0,XEN_VER=xen-3.0,BSD_SYMTAB,VIRT_BASE=0xC0000000\x00"' &gt; tmp</userinput>
&prompt.root; <userinput>objcopy kernel-current &ndash;&ndash;add-section __xen_guest=tmp</userinput></screen>

      <screen>&prompt.root; <userinput>objdump -j __xen_guest -s kernel-current</userinput>

kernel-current:     file format elf32-i386

Contents of section __xen_guest:
 0000 4c4f4144 45523d67 656e6572 69632c47  LOADER=generic,G
 0010 55455354 5f4f533d 66726565 6273642c  UEST_OS=freebsd,
 0020 47554553 545f5645 523d372e 302c5845  GUEST_VER=7.0,XE
 0030 4e5f5645 523d7865 6e2d332e 302c4253  N_VER=xen-3.0,BS
 0040 445f5359 4d544142 2c564952 545f4241  D_SYMTAB,VIRT_BA
 0050 53453d30 78433030 30303030 3000      SE=0xC0000000. </screen>

      <para>现在可以创建并运行 domU 了：</para>

      <screen>&prompt.root; <userinput>xm create /etc/xen/xmexample1.bsd -c</userinput>
Using config file "/etc/xen/xmexample1.bsd".
Started domain freebsd
WARNING: loader(8) metadata is missing!
Copyright (c) 1992-2006 The FreeBSD Project.
Copyright (c) 1979, 1980, 1983, 1986, 1988, 1989, 1991, 1992, 1993, 1994
The Regents of the University of California. All rights reserved.
FreeBSD 7.0-CURRENT #113: Wed Jan  4 06:25:43 UTC 2006
    kmacy@freebsd7.gateway.2wire.net:/usr/home/kmacy/p4/freebsd7_xen3/src/sys/i386-xen/compile/XENCONF
WARNING: DIAGNOSTIC option enabled, expect reduced performance.
Xen reported: 1796.927 MHz processor.
Timecounter "ixen" frequency 1796927000 Hz quality 0
CPU: Intel(R) Pentium(R) 4 CPU 1.80GHz (1796.93-MHz 686-class CPU)
  Origin = "GenuineIntel"  Id = 0xf29  Stepping = 9
  Features=0xbfebfbff&lt;FPU,VME,DE,PSE,TSC,MSR,PAE,MCE,CX8,APIC,SEP,MTRR,PGE,MCA,CMOV,PAT,PSE36,CLFLUSH,
  DTS,ACPI,MMX,FXSR,SSE,SSE2,SS,HTT,TM,PBE&gt;
  Features2=0x4400&lt;CNTX-ID,&lt;b14&gt;&gt;
real memory  = 265244672 (252 MB)
avail memory = 255963136 (244 MB)
xc0: &lt;Xen Console&gt; on motherboard
cpu0 on motherboard
Timecounters tick every 10.000 msec
[XEN] Initialising virtual ethernet driver.
xn0: Ethernet address: 00:16:3e:6b:de:3a
[XEN]
Trying to mount root from ufs:/dev/xbd769a
WARNING: / was not properly dismounted
Loading configuration files.
No suitable dump device was found.
Entropy harvesting: interrupts ethernet point_to_point kickstart.
Starting file system checks:
/dev/xbd769a: 18859 files, 140370 used, 113473 free (10769 frags, 12838 blocks, 4.2% fragmentation)
Setting hostname: demo.freebsd.org.
lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 16384
	  inet6 ::1 prefixlen 128
	  inet6 fe80::1%lo0 prefixlen 64 scopeid 0x2
	  inet 127.0.0.1 netmask 0xff000000
Additional routing options:.
Mounting NFS file systems:.
Starting syslogd.
/etc/rc: WARNING: Dump device does not exist.  Savecore not run.
ELF ldconfig path: /lib /usr/lib /usr/lib/compat /usr/X11R6/lib /usr/local/lib
a.out ldconfig path: /usr/lib/aout /usr/lib/compat/aout /usr/X11R6/lib/aout
Starting usbd.
usb: Kernel module not available: No such file or directory
Starting local daemons:.
Updating motd.
Starting sshd.
Initial i386 initialization:.
Additional ABI support: linux.
Starting cron.
Local package initialization:.
Additional TCP options:.
Starting background file system checks in 60 seconds.

Sun Apr  1 02:11:43 UTC 2007

FreeBSD/i386 (demo.freebsd.org) (xc0)

login: </screen>

      <para>现在 domU 应该能运行 &os;&nbsp;7.0-CURRENT
	内核了：</para>

      <screen>&prompt.root; <userinput>uname -a</userinput>
FreeBSD demo.freebsd.org 7.0-CURRENT FreeBSD 7.0-CURRENT #113: Wed Jan  4 06:25:43 UTC 2006
kmacy@freebsd7.gateway.2wire.net:/usr/home/kmacy/p4/freebsd7_xen3/src/sys/i386-xen/compile/XENCONF  i386</screen>

      <para>接下来可以在 domU 中配置网络了。 &os;
	domU 会使用一种称做
	<devicename>xn0</devicename> 的专用网络接口：</para>

      <screen>&prompt.root; <userinput>ifconfig xn0 10.10.10.200 netmask 255.0.0.0</userinput>
&prompt.root; <userinput>ifconfig</userinput>
xn0: flags=843&lt;UP,BROADCAST,RUNNING,SIMPLEX&gt; mtu 1500
    inet 10.10.10.200 netmask 0xff000000 broadcast 10.255.255.255
    ether 00:16:3e:6b:de:3a
lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 16384
      inet6 ::1 prefixlen 128
      inet6 fe80::1%lo0 prefixlen 64 scopeid 0x2
      inet 127.0.0.1 netmask 0xff000000 </screen>

      <para>在 dom0 Slackware 上 会出现一些 <application>&xen;</application>
	专用的网络接口：</para>

      <screen>&prompt.root; <userinput>ifconfig</userinput>
eth0      Link encap:Ethernet  HWaddr 00:07:E9:A0:02:C2
          inet addr:10.10.10.130  Bcast:0.0.0.0  Mask:255.0.0.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:815 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1400 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:204857 (200.0 KiB)  TX bytes:129915 (126.8 KiB)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:99 errors:0 dropped:0 overruns:0 frame:0
          TX packets:99 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:9744 (9.5 KiB)  TX bytes:9744 (9.5 KiB)

peth0     Link encap:Ethernet  HWaddr FE:FF:FF:FF:FF:FF
          UP BROADCAST RUNNING NOARP  MTU:1500  Metric:1
          RX packets:1853349 errors:0 dropped:0 overruns:0 frame:0
          TX packets:952923 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:2432115831 (2.2 GiB)  TX bytes:86528526 (82.5 MiB)
          Base address:0xc000 Memory:ef020000-ef040000

vif0.1    Link encap:Ethernet  HWaddr FE:FF:FF:FF:FF:FF
          UP BROADCAST RUNNING NOARP  MTU:1500  Metric:1
          RX packets:1400 errors:0 dropped:0 overruns:0 frame:0
          TX packets:815 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:129915 (126.8 KiB)  TX bytes:204857 (200.0 KiB)

vif1.0    Link encap:Ethernet  HWaddr FE:FF:FF:FF:FF:FF
          UP BROADCAST RUNNING NOARP  MTU:1500  Metric:1
          RX packets:3 errors:0 dropped:0 overruns:0 frame:0
          TX packets:2 errors:0 dropped:157 overruns:0 carrier:0
          collisions:0 txqueuelen:1
          RX bytes:140 (140.0 b)  TX bytes:158 (158.0 b)

xenbr1    Link encap:Ethernet  HWaddr FE:FF:FF:FF:FF:FF
          UP BROADCAST RUNNING NOARP  MTU:1500  Metric:1
          RX packets:4 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:112 (112.0 b)  TX bytes:0 (0.0 b)</screen>

      <screen>&prompt.root; <userinput>brctl show</userinput>
bridge name     bridge id           STP enabled         interfaces
xenbr1          8000.feffffffffff   no                  vif0.1
                                                        peth0
                                                        vif1.0</screen>
      </sect3>

    </sect2>
-->
    <sect2 xml:id="virtualization-guest-virtualpc">
      <title>&windows; 上的 Virtual PC</title>

      <para><application>Virtual PC</application> 是 &microsoft;
	上的 &windows; 软件产品， 可以免费下载使用。 相关系统要求，请参阅
	<link xlink:href="http://www.microsoft.com/windows/downloads/virtualpc/sysreq.mspx">system requirements</link> 说明。
	在 &microsoft.windows; 装完 <application>Virtual PC</application>
	之后， 必须针对所安装的虚拟机器来做相应设定。</para>

	<sect3 xml:id="virtualization-guest-virtualpc-install">
	  <title>在 Virtual PC/&microsoft.windows; 上安装 &os;</title>

	  <para>在 &microsoft.windows;/<application>Virtual PC</application>
	    上安装 &os; 的第一步是新增虚拟器。 如下所示，在提示向导中请选择
	    <guimenuitem>Create a virtual machine</guimenuitem>：</para>

	  <mediaobject>
            <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd1"/>
            </imageobject>
          </mediaobject>

	  <mediaobject>
            <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd2"/>
            </imageobject>
          </mediaobject>

	  <para>然后在 <guimenuitem>Operating system</guimenuitem>
	    处选 <guimenuitem>Other</guimenuitem>：</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd3"/>
	    </imageobject>
	  </mediaobject>

	  <para>并依据自身需求来规划硬盘容量和内存的分配。对大多数在
	    <application>Virtual PC</application> 使用 &os;
	    的情况而言， 大约 4GB 的硬盘空间以及 512MB 的内存就够用了。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd4"/>
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd5"/>
	    </imageobject>
	  </mediaobject>

	  <para>保存并完成配置：</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd6"/>
	    </imageobject>
	  </mediaobject>

	  <para>接下来选择新建的 &os; 虚拟机器，并单击
	    <guimenu>Settings</guimenu>， 以设定网络种类以及网卡：</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd7"/>
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
            <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd8"/>
            </imageobject>
          </mediaobject>

	  <para>在新建 &os; 虚拟机器以后， 就可以继续以其安装
	    &os;。 安装方面， 比较好的作法是使用官方的 &os;
	    光盘或从官方 FTP 站下载 ISO 镜像。 若您的 &windows; 系统
	    内已有该 ISO 镜像， 那么就可以在 &os; 虚拟机器上双击，
	    以开始启动。 接着在 <application>Virtual PC</application>
	    窗口内按 <guimenu>CD</guimenu> 再按
	    <guimenu>Capture ISO Image...</guimenu>。 接着出现一个对话框，
	    可以把虚拟机器内的光驱设定到该 ISO 镜像， 或者是真实的光驱。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd9"/>
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd10"/>
	    </imageobject>
	  </mediaobject>

	  <para>设好光盘来源之后，就可以重新开机， 也就是先按
	    <guimenu>Action</guimenu> 再按  <guimenu>Reset</guimenu> 即可。
	    <application>Virtual PC</application> 会以特殊 BIOS 开机，
	    并与普通 BIOS 一样会先检查是否有光盘驱动器。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd11"/>
	    </imageobject>
	  </mediaobject>

	  <para>此时， 它会找到 &os; 安装光盘， 并开始在
	    <xref linkend="install"/> 内所介绍的
	      <application>sysinstall</application> 安装过程。
	      这时候也可以顺便安装 X11， 但不要进行相关设定。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd12"/>
	    </imageobject>
	  </mediaobject>

	  <para>完成安装之后， 记得把安装光盘或者 ISO 镜像退出。
	    最后， 把装好的 &os; 虚拟机器重新开机即可。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/virtualpc-freebsd13"/>
	    </imageobject>
	  </mediaobject>
	</sect3>

	<sect3 xml:id="virtualization-guest-virtualpc-configure">
	  <title>调整 &microsoft.windows;/Virtual PC 上的 &os;</title>

	  <para>在 &microsoft.windows; 上以 <application>Virtual PC</application>
	    装好 &os; 后， 还需要做一些设定步骤，
	    以便将虚拟机内的 &os; 最佳化。</para>

          <procedure>
	    <step>
	      <title>设定 boot loader 参数</title>

	      <para>最重要的步骤乃是藉由调降 <option>kern.hz</option>
		来降低 <application>Virtual PC</application> 环境内
		&os; 的 CPU 占用率。 在
		<filename>/boot/loader.conf</filename>
		内加上下列设定即可：</para>

	  	<programlisting>kern.hz=100</programlisting>

	      <para>若不作这设定， 那么光是 idle 状态的 &os;
		<application>Virtual PC</application> guest OS
		就会在单一处理器的电脑上大约有 40% 的 CPU 占用率。
		作了上述修改之后, 占用率大约会降至 3%。</para>
	    </step>

	    <step>
	      <title>建立一个新的内核配置文件</title>

	      <para>可以放心把所有的 SCSI， FireWire 和 USB
		设备驱动都移除。 <application>Virtual PC</application>
		有提供 &man.de.4; 的虚拟网卡， 因此除了
		&man.de.4; 以及 &man.miibus.4;
		以外其他的网卡也都可以从内核的配置文件中移除。</para>
	    </step>

	    <step>
	      <title>设定网络</title>

	      <para>可以给虚拟机器简单得使用 DHCP 来设定与
		host (&microsoft.windows;) 相同的本地网络环境，
		只要在 <filename>/etc/rc.conf</filename>
		加上 <literal>ifconfig_de0="DHCP"</literal>
		即可完成。 其他的高级网络设置， 可参阅
		<xref linkend="advanced-networking"/>.</para>
	    </step>
          </procedure>

      </sect3>

    </sect2>

    <sect2 xml:id="virtualization-guest-vmware">
      <title>运行于 MacOS 的 VMware</title>

      <para>&mac; 版本的 <application>VMware Fusion</application>
	是一个商业软件，运行在基于 &intel; 的 &apple; &mac; 计算机的
	&macos; 10.4.9 或更版本的操作系统上。 &os;
	是一个完全被支持的客户操作系统。 在 &macos; X 上安装了
	<application>VMware Fusion</application> 之后，
	用户就可以着手配置一个虚拟机器并安装客户操作系统。</para>

	<sect3 xml:id="virtualization-guest-vmware-install">
	  <title>在 VMware/&macos; X 上安装 &os;</title>

	  <para>第一步是运行 VMware Fusion， 虚拟机器库将被装载。
	    单击 "New" 创建 VM：</para>

	  <mediaobject>
            <imageobject>
	      <imagedata fileref="virtualization/vmware-freebsd01"/>
            </imageobject>
          </mediaobject>

	  <para>New Virtual Machine Assistant 将被运行来帮助你创建 VM，
	    单击 Continue 继续：</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/vmware-freebsd02"/>
	    </imageobject>
	  </mediaobject>

	  <para>在 <guimenuitem>Operatiing System</guimenuitem> 项选择
	    <guimenuitem>Other</guimenuitem>，<guimenuitem>Version</guimenuitem>
	    项可选 <guimenuitem>&os;</guimenuitem> 或
	    <guimenuitem>&os; 64-bit</guimenuitem>。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/vmware-freebsd03"/>
	    </imageobject>
	  </mediaobject>

	  <para>选一个你想要的 VM 镜像名字和存储的目录位置。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/vmware-freebsd04"/>
	    </imageobject>
	  </mediaobject>

	  <para>选择 VM 虚拟硬盘的大小：</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/vmware-freebsd05"/>
	    </imageobject>
	  </mediaobject>

	  <para>选择安装 VM 的方式， 从一个 ISO 镜像或一张 CD 安装：</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/vmware-freebsd06"/>
	    </imageobject>
	  </mediaobject>

	  <para>一旦你点击了 Finish， VM 就会启动了：</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/vmware-freebsd07"/>
	    </imageobject>
	  </mediaobject>

	  <para>以你通常的方式安装 &os; 或者参照 <xref linkend="install"/>
	      中的步骤：</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/vmware-freebsd08"/>
	    </imageobject>
	  </mediaobject>

	  <para>安装完成之后，你就可以修改一些 VM 的设定，比如内存大小：</para>

          <note>
	    <para>在 VM 运行的时候，VM 系统硬件的设置是无法修改的。</para>
          </note>

	  <mediaobject>
            <imageobject>
	      <imagedata fileref="virtualization/vmware-freebsd09"/>
            </imageobject>
          </mediaobject>

	  <para>配置 VM 的 CPU 数量：</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/vmware-freebsd10"/>
	    </imageobject>
	  </mediaobject>

	  <para>CD-ROM设备的状态。通常当你不在需要 CDROM/ISO 的时候可以切断他们跟
	    VM 的连接。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/vmware-freebsd11"/>
	    </imageobject>
	  </mediaobject>

	  <para>最后一项需要修改的是 VM 与网络连接的方式。
	    如果你希望除了宿主以外的机器也能连接到 VM，
	    请选择 <guimenuitem>Connect directly to the physical network
	    (Bridged)</guimenuitem>。选择 <guimenuitem>Share the
	    host's internet connection (NAT)</guimenuitem> 的话，
	    VM 可以连接上网络，但是不能从外面访问。</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/vmware-freebsd12"/>
	    </imageobject>
	  </mediaobject>

	  <para>在你修改完设定之后，就可以从新安装的 &os;
	    虚拟机器启动了。</para>
        </sect3>

	<sect3 xml:id="virtualization-guest-vmware-configure">
	  <title>配置运行于 &macos; X/VMware 上的 &os;</title>

	  <para>在 &macos; X 上的 <application>VMware</application>
	    上安装完 &os; 之后，有些配置的步骤可用来优化虚拟系统。</para>

          <procedure>
	    <step>
	      <title>设置 boot loader 变量</title>

	      <para>最重要的步骤是降低 <option>kern.hz</option>
		来减少 <application>VMware</application> 上 &os;
		的 CPU 使用率。这需要在 <filename>/boot/loader.conf</filename>
		里加入以下这行设定：</para>

	  	<programlisting>kern.hz=100</programlisting>

	      <para>如果没有这项设定，<application>VMware</application>
		上的 &os; 客户 OS 空闲时将占用 &imac; 上一个 CPU
		大约 15% 的资源。在修改此项设定之后仅为 5%。</para>
	    </step>

	    <step>
	      <title>创建一个新的内核配置文件</title>

	      <para>你可以去掉所有的 FireWire, USB 设备的驱动程序。
		<application>VMware</application> 提供了一个
		&man.em.4; 支持的虚拟网络适配器，所以除了 &man.em.4;
		之外的网卡驱动都可以被剔除。</para>
	    </step>

	    <step>
	      <title>设置网络</title>

	      <para>最基本的网络设定包括简单的使用 DHCP
		把你的虚拟机器连接到宿主 &mac; 相同的本地网络上。
		在 <filename>/etc/rc.conf</filename> 中加入：
		<literal>ifconfig_em0="DHCP"</literal>。
		更多有关网络的设置可以参阅
		<xref linkend="advanced-networking"/>。</para>
	    </step>
          </procedure>

      </sect3>
    </sect2>
  </sect1>

  <sect1 xml:id="virtualization-host">
    <title>作为宿主 OS 的 &os;</title>

    <para>在过去的几年中 &os; 并没有任何可用的并被官方支持的虚拟化解决方案。
      一些用户曾时使用过利用 &linux; 二进制兼容层运行的
      <application>VMware</application> 陈旧并多半已过时的版本 (比如
      <package>emulators/vmware3</package>)。
      在 &os;&nbsp;7.2 发布不久， Sun 开源版本 (Open Source Edition
      <acronym>OSE</acronym>) 的 <application>&virtualbox;</application>
      作为一个 &os; 原生的程序出现在了 Ports&nbsp;Collection 中。</para>

    <para><application>&virtualbox;</application> 是一个开发非常活跃，
      完全虚拟化的软件， 并且可在大部份的操作系统上使用， 包括 &windows;，
      &macos;， &linux; 和 &os;。同样也能把 &windows; 或 &unix;
      作为客户系统运行。 它有一个开源和一个私有两种版本。 从用户的角度来看，
      <acronym>OSE</acronym> 版本最主要的限制也许是缺乏 USB 的支持。
      其他更多的差异可以通过链接
      <uri xlink:href="http://www.virtualbox.org/wiki/Editions">http://www.virtualbox.org/wiki/Editions</uri>
      查看 <quote>Editions</quote> 页面。 目前， &os; 上只有 OSE
      版本可用。</para>

    <sect2 xml:id="virtualization-virtualbox-install">
      <title>安装 &virtualbox;</title>

      <para><application>&virtualbox;</application> 已作为一个 &os; port 提供，
        位于 <package>emulators/virtualbox-ose</package>，
        可使用如下的命令安装：</para>

      <screen>&prompt.root; <userinput>cd /usr/ports/emulators/virtualbox-ose</userinput>
&prompt.root; <userinput>make install clean</userinput></screen>

      <para>在配置对话框中的一个有用的选项是
        <literal>GusetAdditions</literal> 程序套件。
        这些在客户操作系统中提供了一些有用的特性，
        比如集成鼠标指针 (允许在宿主和客户系统间使用鼠标，
        而不用事先按下某个特定的快捷键来切换) 和更快的视频渲染，
        特别是在 &windows; 客户系统中。 在安装了客户操作系统之后，
        客户附加软件可在 <guimenu>Devices</guimenu> 菜单中找到。</para>

      <para>在第一次运行 <application>&virtualbox;</application>
        之前还需要做一些配置上的修改。port 会安装一个内核模块至
        <filename>/boot/modules</filename> 目录，
        此模块需要事先加载：</para>

      <screen>&prompt.root; <userinput>kldload vboxdrv</userinput></screen>

      <para>可以在 <filename>/boot/loader.conf</filename>
        中加入以下的配置使此模块在机器重启之后能自动加载：</para>

      <programlisting>vboxdrv_load="YES"</programlisting>

      <para>在 3.1.2 之前版本的 <application>&virtualbox;</application>
	需要挂接 <filename>proc</filename> 文件系统。
	在新版本中不再有此要求， 因为它们使用了由 &man.sysctl.3; 库提供的功能。</para>

      <para>当使用旧版本的 port 时， 需要使用下面的步骤来挂载
	<filename>proc</filename>：</para>

      <screen>&prompt.root; <userinput>mount -t procfs proc /proc</userinput></screen>

      <para>为了使配置能在重启后始终生效， 需要在
        <filename>/etc/fstab</filename> 中加入以下这行：</para>

      <programlisting>proc	/proc	procfs	rw	0	0</programlisting>

      <note>
        <para>如果在运行 <application>&virtualbox;</application>
          的终端中发现了类似如下的错误消息：</para>

	<screen>VirtualBox: supR3HardenedExecDir: couldn't read "", errno=2 cchLink=-1</screen>

        <para>此故障可能是由 <filename>proc</filename>
          文件系统导致的。 请使用 <command>mount</command>
          命令检查文件系统是否正确挂载。</para>
      </note>

      <para>在安装 <application>&virtualbox;</application>
        时会自动创建 <systemitem class="groupname">vboxusers</systemitem> 组。
        所有需要使用 <application>&virtualbox;</application>
        的用户必须被添加为此组中的成员。 可以使用 <command>pw</command>
        命令添加新的成员：</para>

      <screen>&prompt.root; <userinput>pw groupmod vboxusers -m yourusername</userinput></screen>

      <para>运行 <application>&virtualbox;</application>，
        可以通过选择你当前图形环境中的
        <guimenuitem>Sun VirtualBox</guimenuitem>，
        也可以在虚拟终端中键入以下的命令:</para>

      <screen>&prompt.user; <userinput>VirtualBox</userinput></screen>

      <para>获得更多有关配置和使用 <application>&virtualbox;</application>
        的信息， 请访问官方网站 <uri xlink:href="http://www.virtualbox.org">http://www.virtualbox.org</uri>。
        鉴于 &os; port 非常新， 并仍处于开发状态。请查看 &os; wiki
        上的相关页面 <uri xlink:href="http://wiki.FreeBSD.org/VirtualBox">http://wiki.FreeBSD.org/VirtualBox</uri>
        以获取最新的信息和故障排查细则。</para>
    </sect2>
<!--
  Note:  There is no working/end-user ready Xen support for FreeBSD as of 07-2010.
         Hide all information regarding Xen under FreeBSD.

    <sect2 id="virtualization-other">
      <title>其他的虚拟化选项</title>

      <para><application>&xen;</application>在 &os;
        上作为宿主运行依然处于开发之中。</para>
    </sect2>
-->
  </sect1>

</chapter>
