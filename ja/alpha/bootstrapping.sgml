<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN" [
<!ENTITY base CDATA "..">
<!ENTITY date "$Date: 1998-08-10 12:59:11 $">
<!ENTITY title "Bootstrapping FreeBSD/Alpha">
<!ENTITY email 'freebsd-alpha'>
<!ENTITY % includes SYSTEM "../includes.sgml"> %includes;
]>
<!-- The FreeBSD Japanese Documentation Project -->
<!-- Original revision: 1.7 -->
<!-- $Id: bootstrapping.sgml,v 1.1 1998-08-10 12:59:11 kuriyama Exp $ -->
 
<html>
&header;

<pre>
From: John Birrell &lt;jb@freebsd1.cimlogic.com.au>
Message-Id: <199801110548.QAA24424@freebsd1.cimlogic.com.au>
Subject: Bootstrapping FreeBSD/Alpha
To: alpha@FreeBSD.ORG
Date: Sun, 11 Jan 1998 16:48:09 +1100 (EST)


G'day,

NetBSD/Alpha 1.3 がインストールされたシステムから FreeBSD/Alpha を 
ブートストラップするための変更の山を commit しました. ブートストラップ
は完了していませんが ( 2.5日後 ), ソースに精通している人々が試してみる 
ことが可能な状態になりました.

ブートストラップは今使っているシステムの, なにも壊しません. これは 
-current make world を基に変更された makefile を使いますが, 
残念なことに (まだ)最後の install はありません. 
ブートストラップはずっと前で abort します. 8-).

このブートストラップの背後にある哲学は NetBSD/Alpha システムを 保持し
たままで FreeBSD ブートストラップを用いることで FreeBSD/Alpha に進化さ
せることです. kernel インターフェースが異るためシステムは当分ハイブリッ
ドなままでしょう. なるべく多くの FreeBSD user-space code を走らせるこ
と, そして結果として (できれば) 多くの人が, はるか彼方のシステムをものに
するためにマウンドに上ってくれることを目的としています.

ブートストラップが行なうことの一覧:

1.  もしあれば以前の build を削除します. 常に最初からブートストラップ
    します.

2.  NetBSD の mkdep では十分でないので temporay build tree に FreeBSD
    の mkdep をインストールします.

3.  FreeBSD の .mk と makefile を使って NetBSD の make を実行し,
    FreeBSD の ソースと NetBSD の ヘッダー, インストール済みのライブラ
    リとツールから make の新バージョンを作ります.

4.  NetBSD ではない -L オプションが使える FreeBSD バージョンの find を
    作ります. NetBSD の libc は getvfsbyname() をサポートしていないので,
    このバージョンの find では -fstype オプションは使えません. 

5.  通常の build と 同様に mtree を実行します. この時点で FreeBSD には
    あって NetBSD にはない, いくつかのユーザーとグループを追加する必要
    があることに気づくでしょう.

6.  通常の build と同様に obj tree を build します.

7.  今度は FreeBSD の make によって makefile を解釈し, make を 作り直
    します (万一に備えて NetBSD の make は 他の build コマンド群と同
    じように扱われます).

8.  NetBSD の install は -C を受け付けないので FreeBSD の ソースから
    作ります.

9.  通常の build と同じように lex を 作ります.

10. 移植されていない GNU プログラムへリンクをはります.

11. ライブラリを build するのに必要な gperf, tsort, bison, gcc, cpp,
    g++ などを 作ります.

12. FreeBSD のヘッダーファイルを temporary build tree へインストールし
    ます.

ここまでは, FreeBSD のものが作られているにもかかわらず NetBSD の make 
を使って作業します. FreeBSD の ソースは NetBSD のヘッダでプリプロセス
され プログラムは NetBSD のライブラリをリンクしていました. ここからは,
FreeBSD のプログラムが作られていればそれを使い, なければ NetBSD のもの
を使います. ここから先では FreeBSD のヘッダーファイルだけが参照されます.

13. 残りの build ツールをリンクするのに必要なたくさんの最も重要なライ
    ブラリを作ります. [このどこかで NetBSD の libc から ctype.h が参照
    している locale 関数をリンクしようとして見つからずに build がギシ
    ギシ失敗するのを当然だと思うでしょう. 私はこれを解決するために libc
    の移植を始めました.]

14. 残りの build ツールを作成します.

15. 全ての依存規則を作ります.

16. 全てを作成します.

[いつか完成したときには 既存のシステムを上書きするインストール].

ブートストラップを行なう前に, そのために 壊してはいけないものが壊され
てしまったらどうなるのかを考えるようにしてください. いつもと同じように
自分の責任で行なってください. 8-)

私の手順は:

1.  /usr/src を 他の (FreeBSD) マシンからマウントします.
2.  buid に十分なスペースのあるディスクに /usr/obj を作成します.
3.  cd /usr/src
    make -m /usr/src/share/mk buildworld
4.  クラッシュするまで傍観します. ライブラリができる前に止まってしまっ
    たら, 多分何か comitt するのを忘れているのでしょう.
5.  止まった時点で, 作成できた全てのものは /usr/obj/usr/src/tmp tree 
    にあります. 走らせて下さい!

私に ( このメーリングリストにも ) 結果を教えてください. そして誰か他に
この仕事をやりたい人がいれば, お願いします.

Regards,

-- 
John Birrell - jb@cimlogic.com.au; jb@netbsd.org; jb@freebsd.org
CIMlogic Pty Ltd, GPO Box 117A, Melbourne Vic 3001, Australia +61 418 353 137
</pre>

&footer;
</body>
</html>
