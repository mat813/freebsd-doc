<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" [
<!ENTITY base CDATA "../..">
<!ENTITY email 'freebsd-qa'>
<!ENTITY date "$FreeBSD: www/en/releases/5.3R/todo.sgml,v 1.29 2004/07/15 13:23:18 rwatson Exp $">
<!ENTITY title "FreeBSD 5.3 Open Issues">
<!ENTITY % includes SYSTEM "../../includes.sgml"> %includes;
<!ENTITY % developers SYSTEM "../../developers.sgml"> %developers;
<!-- Status levels -->
<!ENTITY status.na "<font color=green>N/A</font>">
<!ENTITY status.done "<font color=green>Done</font>">
<!ENTITY status.wip "<font color=blue>In&nbsp;progress</font>">
<!ENTITY status.untested "<font color=orange>Needs&nbsp;testing</font>">
<!ENTITY status.new "<font color=red>Not&nbsp;done</font>">
<!ENTITY status.unknown "<font color=red>Unknown</font>">
]>

<html>
&header;

<h1>Open Issues</h1>

<p>This is a list of open issues that need to be resolved for FreeBSD
  5.3.  If you have any updates for this list, please e-mail
  re@FreeBSD.org.</p>

<h3>Show stopper defects for 5.3-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

  <tr>
    <td>/dev/random stalls single user and sysinstall</td>
    <td>&status.unknown;</td>
    <td>&a.markm;</td>
    <td>The kernel random number generator requires either the yarrow
      subsystem to start or the user to tap on the keyboard before it will
      deliver data to /dev/random.  This results in confusing behavior and
      strange messages when in single user mode, and makes sysinstall stall.
      Non-blocking behavior must be restored for 5.3.</td>
  </tr>

  <tr>
    <td>gcc 3.3 floating point alignment regression</td>
    <td>&status.new;</td>
    <td>&nbsp;</td>
    <td>The current gcc snapshot includes regressions in alignment of
      floating point arguments, resulting in a substantial performance
      degradation.  Newer gcc 3.3.3 snapshots fix this, and must be
      imported before 5.3-RELEASE.  If gcc-3.4 is imported instead, it
      must be checked for this regression.</td>
  </tr>

  <tr>
    <td>PREEMPTION triggers frequent hangs</td>
    <td>&status.new;</td>
    <td>&a.jhb;</td>
    <td>Recent re-introduction of PREEMPTION has resulted in reports of
      frequent hangs.  This may be a combination of bugs in scheduling and
      context switching, as well as existing bugs triggered by preemption.
      These problems must be corrected for 5.3-RELEASE (and ideally long
      before).</td>
  </tr>

</table>

<h3>Required features for 5.3-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th></tr>
  <tr>
    <td>GCC 3.4 for all platforms</td>
    <td>&status.wip;</td>
    <td>&a.kan;</td>
    <td>GCC 3.4 is needed to support TLS on all our our Tier-1 platforms.
      It also is likely to be better maintained by the FSF during the
      lifespan on 5.x than GCC 3.3 is.</td>
  </tr>

  <tr>
    <td>GDB 6.1 kernel debugging support</td>
    <td>&status.wip</td>
    <td>&a.marcel;</td>
    <td>GDB 6.1.1 import does not include FreeBSD kernel debugging support.</td>
  </tr>

  <tr>
    <td>BIND9 import into 5-CURRENT</td>
    <td>&status.wip;</td>
    <td>&a.dougb;</td>
    <td>BIND9 must be imported for 5.3-RELEASE.</td>
  </tr>

  <tr>
    <td>KSE support for sparc64</td>
    <td>--</td>
    <td>--</td>
    <td>Kernel bits implemented, userland not implemented.  Required for
      5.3-RELEASE.</td>
  </tr>

  <tr>
    <td>Fine-grained network stack locking without Giant</td>
    <td>&status.wip;</td>
    <td>&a.rwatson;</td>
    <td>Significant parts of the network stack (especially IPv4, UNIX
      domain IPC, and sockets) now have fine-grained locking of their data
      structures.  It's possible to run many common network subsystems and
      services without the Giant lock.  However, a number of device drivers
      and less mainstream network subsystems are currently not MPSAFE.
      By 5.3-RELEASE, it is necessary to have the vast majority of
      network code running without Giant, including sockets, permitting
      complete local<->remote delivery without grabbing Giant.</td>
  </tr>

  <tr>
    <td>kld support for amd64</td>
    <td>&status.wip;</td>
    <td>&a.obrien; &a.peter;</td>
    <td>KLDs work when loaded from userland, but not from the loader.  kldxref
      might also need work.  Required for amd64 to be promoted to tier-1
      status.</td>
  </tr>

  <tr>
    <td>GDB thread support</td>
    <td>&status.wip;</td>
    <td>&a.davidxu;,&a.marcel;</td>
    <td>With improved support for threading primitives, support is now
      required to ease debugging of threaded applications.  Ideally,
      this support will work for both libthr and libkse threading
      models.</td>
  </tr>

  <tr>
    <td>Scheduler cleanup and resolution</td>
    <td>&status.wip;</td>
    <td>--</td>
    <td>Currently, two schedulers are present: SCHED_ULE (default), an
      SMP-optimized scheduler created as part of SMPng, and SCHED_4BSD,
      an SMP-adapted version of the original 4BSD scheduler.  They have
      quite different performance properties, with ULE providing strong
      interactivity characteristics, and performing quite well in a
      number of benchmarks, and 4BSD showing greater strength in IPC
      intensive user space benchmarks, such as databases.  One of these
      schedulers must be the default for 5.3, and whichever one it is,
      it requires careful measurement, analysis, and optimization before
      the release in order to address its defficiences.</td>
  </tr>

  <tr>
    <td>Reports of UFS2 "large disk" problems</td>
    <td>&status.wip</td>
    <td>&a.scottl;</td>
    <td>There have been several reports that growfs(8) works improperly
      with large disk sizes, and other size-related nits in the current
      disk and label management tool set.  These must be resolved for
      5.3-RELEASE.<td/>
  </tr>

</table>

<h3>Desired features for 5.3-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

  <tr>
    <td>Completed compiler support for dynamic root </td>
    <td>--</td>
    <td>&a.kan; and &a.obrien;</td>
    <td>All platforms but IA64 have modifications to support /libexec/ld.so
      in the gcc base source tree; changes for all FreeBSD platforms have been
      merged back into the FSF 3.4 tree.  They should be brought into FreeBSD
      on the vendor branch with a 3.4 import for 5.3-RELEASE.</td>
  </tr>

  <tr>
    <td>truss support for ptrace</td>
    <td>--</td>
    <td>--</td>
    <td>Almost all process debugging tools have been updated to use
      non-procfs kernel primitives, with the exception of truss(1).
      As procfs is considered deprecated due to its inherent security
      risks, it is highly desirable to update truss to operate in
      a post-procfs world.  &a.des; had prototype patches; &a.robert;
      is developing and testing patches now.  Support for system
      call tracing has been added to ptrace().</td>
  </tr>

  <tr>
    <td>Per-platform Thread-Local Storage</td>
    <td>&status.wip;</td>
    <td>&a.dfr;, &a.marcel;</td>
    <td>To complete support for thread-local storage on FreeBSD,
      per-architecture changes must be made.  Currently pending
      platforms are amd64, alpha, ia64, i386, sparc64, and powerpc.</td>
  </tr>

  <tr>
    <td>FAST_IPSEC and KAME compatibility</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>FAST_IPSEC currently cannot be used directly with the KAME IPv6
      implementation, requiring an additional level of IP tunnel
      indirection to protect IPv6 packets when using hardware crypto
      acceleration.  This issue must be resolved so that the two
      services may more easily be used together.  Among other things,
      this will require a careful review of the handling of mbuf
      header copying and m_tag support in the KAME IPv6 code.</td>
  </tr>

  <tr>
    <td>rpc.lockd(8) stability</td>
    <td>--</td>
    <td>--</td>
    <td>A process cannot be interrupted while waiting on a lock.  Fixing
      this requires that the RPC code be taught how to deal with lock
      cancellation and interruption events.</td>
  </tr>

  <tr>
    <td>Revised kld build infrastructure</td>
    <td>&status.new;</td>
    <td>&a.peter;</td>
    <td>Kernel modules are currently built independently from a kernel
      configuration, and independently from one another, resulting in
      substantially redundant compilation of objects, as well as the
      inability to easily manage compile-time options for kernel
      objects (such as MAC, PAE, etc) that may require conditional
      compilation in the kernel modules.  In order to improve build
      performance and better support options of this sort, the
      KLD build infrastructure needs to be revamped.  &a.peter; has
      done some initial prototyping, and should be contacted before
      starting on this work.</td>
  </tr>

  <tr>
    <td>Merge of Darwin msdosfs, other fixes</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>Apple's Darwin operating system has fairly extensive improvements
      to msdosfs and other kernel services; these fixes must be reviewed
      and merged to the FreeBSD tree.</td>
  </tr>

  <tr>
  <td>Race conditions in truss</td>
  <td>Errata candidate</td>
  <td>&a.robert;</td>
  <td>Truss appears to contain a race condition during the start-up of
    debugging, which can result in truss failing to attach to the process
    before it exits.  The symptom is that truss reports that it cannot
    open the procfs node supporting the process being debugged.  A bug
    also appears to exist where in truss will hang if execve() returns
    ENOENT.  A further race appears to exist in which truss will return
    "PIOCWAIT: Input/output error" occasionally on startup.  The fix
    for this sufficiently changes process execution handling that we
    will defer the fix to post-5.0 and consider this errata.</td>
  </tr>

  <tr>
    <td>ACL_MASK override of umask support in UFS</td>
    <td>&status.new;</td>
    <td>&a.rwatson;</td>
    <td>Many systems supporting POSIX.1e ACLs permit a minor violation
      to that specification, in which the ACL_MASK entry overrides the
      umask, rather than being intersected with it.  The resulting
      semantics can be useful in group-oriented environments, and as
      such would be very helpful on FreeBSD.</td>
  </tr>

  <tr>
    <td>filedesc LOR</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>The LOR reported in PR kern/55175 needs to be fixed.  Filedesc locking
      needs to be heavily reviewed in general.</td>
  </tr>

  <tr>
    <td>MAC support for NFS Server</td>
    <td>&status.new;</td>
    <td>&a.rwatson;</td>
    <td>Currently, MAC protections are enforced only on locally originated
      file system operations (VOPs), and not on RPCs generated via the
      NFS server.  Improvements in NFS server credential handling are
      required to correct this problem, as well as the introduction of
      new entry points to properly label NFS credentials and perform
      enforcement properly.</td>
  </tr>

  <tr>
    <td>busdma in all PCI drivers</td>
    <td>&status.wip;</td>
    <td>--</td>
    <td>All PCI drivers must use busdma for DMA; no use of vtophys() will
      be permitted for any recent device driver.  ISA drivers may be 
      exempt.</td>
  </tr>

  <tr>
    <td>KSE support for alpha</td>
    <td>&status.wip;</td>
    <td>&a.marcel;</td>
    <td>Userland bits implemented, kernel bits not implemented.</td>
  </tr>

  <tr>
    <td>CAM locking</td>
    <td>&status.wip;</td>
    <td>&a.scottl;</td>
    <td>For kernel API/ABI compatibility reasons, it would be desirable to
      have the CAM locking strategy determined and loosely implemented for
      5.3.</td>

</table>

<h3>Documentation items that must be resolved for 5.3</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>
  <tr>
    <td>i386 Floppy Installation Docs</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>The installation documentation doesn't take into account the
      new floppy images (with a full kernel split across multiple
      disks).  This should be updated.</td>
  </tr>

  <tr>
    <td>Finish hardware notes trimming</td>
    <td>&status.wip;</td>
    <td>--</td>
    <td>Finish removing mention of individual devices in the hardware
      notes; hardware notes listings should refer to device listings in
      individual manual pages.</td>
  </tr>

</table>

<h3>Testing focuses for 5.3-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>
  <tr>
    <td>SCHED_ULE as the default scheduler</td>
    <td>&status.untested;</td>
    <td>&a.jeff;</td>
    <td>SCHED_ULE provides better interactivity, higher performance, and the
      ability to support pinning and affinity.  Basic HTT scheduling policies
      should be in place for 5.3 also.</td>
  </tr>

  <tr>
    <td>make -DUSE_KQUEUE causes lockup with buildworld -jBIGNUM</td>
    <td>&status.untested;</td>
    <td>&a.green;, &a.jmg;</td>
    <td>Attempts to use make(1) with KQueues appears to result in a kernel
      hang under "heavy load".  It would be desirable to fix this
      both from the perspective of building FreeBSD quickly as a
      developer, but also because it's an instability that could show
      up under other high load and heavy use of KQueues.  See PR
      kern/57945 for a proposed patch and details.  This appear to be
      the product of a locking problem, and must be fixed for 5.3.</td>
  </tr>

  <tr>
    <td>KSE as the default threads library</td>
    <td>&status.untested;</td>
    <td>&a.davidxu;, &a.deischen;</td>
    <td>KSE has matured to the point of being more stable and POSIX-compliant
      than the traditional libc_r.  All Tier-1 platforms <b>MUST</b> have
      stable KSE support for 5.3 in order to support a consistent transition.
      Additionally, all ports that depend on the pthreads API must be modified
      to properly detect and support the default threading library.</td>
  </tr>

  <tr>
    <td>Updated binutils for all platforms</td>
    <td>&status.untested;</td>
    <td>&a.obrien;</td>
    <td>Binutils needs updating in order to support new platforms, newer GDB
      versions, and Thread Local Storage.</td>
  </tr>

</table>

    &footer;

  </body>
</html>
