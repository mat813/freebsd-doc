<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" [
<!ENTITY base CDATA "../..">
<!ENTITY email 'freebsd-qa'>
<!ENTITY date "$FreeBSD: www/en/releases/5.3R/todo.sgml,v 1.56 2004/08/31 00:33:34 brueffer Exp $">
<!ENTITY title "FreeBSD 5.3 Open Issues">
<!ENTITY % includes SYSTEM "../../includes.sgml"> %includes;
<!ENTITY % developers SYSTEM "../../developers.sgml"> %developers;
<!-- Status levels -->
<!ENTITY status.na "<font color=green>N/A</font>">
<!ENTITY status.done "<font color=green>Done</font>">
<!ENTITY status.wip "<font color=blue>In&nbsp;progress</font>">
<!ENTITY status.untested "<font color=orange>Needs&nbsp;testing</font>">
<!ENTITY status.new "<font color=red>Not&nbsp;done</font>">
<!ENTITY status.unknown "<font color=red>Unknown</font>">
]>

<html>
&header;

<h1>Open Issues</h1>

<p>This is a list of open issues that need to be resolved for FreeBSD
  5.3.  If you have any updates for this list, please e-mail
  re@FreeBSD.org.</p>

<h3>Show stopper defects for 5.3-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

  <tr>
    <td>PREEMPTION-related hangs involving threads</td>
    <td>&status.wip;</td>
    <td>&a.scottl;, &a.julian;</td>
    <td>PREEMPTION appears to increase the chances of triggering a race
      condition in the thread context management and scheduling code.
      Patches to mitigate the problem have been developed, with on-going
      work to come up with the correct solution prior to 5.3.</td>
  </tr>

  <tr>
    <td>NFS over IPv6 problems</td>
    <td>&status.new;</td>
    <td>-</td>
    <td>&a.kuriyama; has reported problems with NFS over IPv6 not functioning
      correctly as of the improved NFS support for disconnection changes.</td>
  </tr>

  <tr>
    <td>poll()/select() application wedge reports with debug.mpsafenet=1</td>
    <td>&status.wip;</td>
    <td>&a.rwatson;</td>
    <td>There are reports of applications wedging in poll() and select()
      while running the network stack without the Giant lock.  A recent
      sleepq change appears to have caused some of the observed problems
      to go away (others are difficult to test for due to recent SMP
      instability).</td>
  </tr>

  <tr>
    <td>ether_input() may harvest entropy from free()'d mbuf</td>
    <td>&status.wip;</td>
    <td>&a.markm;</td>
    <td>ether_input() calls random_harvest() on the mbuf after it has been
      handed off to ether_demux(), at which point it may have been free()'d
      back to the mbuf allocator.  It also passes in a pointer to the mbuf
      itself, rather than ethernet frame header.</td>
  </tr>

</table>

<h3>Required features for 5.3-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th></tr>
  <tr>
    <td>GDB 6.1 kernel debugging support</td>
    <td>&status.wip</td>
    <td>&a.marcel;</td>
    <td>GDB 6.1.1 import does not include FreeBSD kernel debugging support.</td>
  </tr>

  <tr>
    <td>BIND9 import into 5-CURRENT</td>
    <td>&status.wip;</td>
    <td>&a.dougb;</td>
    <td>BIND9 must be imported for 5.3-RELEASE.</td>
  </tr>

  <tr>
    <td>KSE support for sparc64</td>
    <td>--</td>
    <td>--</td>
    <td>Kernel bits implemented, userland not implemented.  Required for
      5.3-RELEASE.</td>
  </tr>

  <tr>
    <td>Fine-grained network stack locking without Giant</td>
    <td>&status.wip;</td>
    <td>&a.rwatson;</td>
    <td>Significant parts of the network stack (especially IPv4, UNIX
      domain IPC, and sockets) now have fine-grained locking of their data
      structures.  It's possible to run many common network subsystems and
      services without the Giant lock.  However, a number of device drivers
      and less mainstream network subsystems are currently not MPSAFE.
      By 5.3-RELEASE, it is necessary to have the vast majority of
      network code running without Giant, including sockets, permitting
      complete local<->remote delivery without grabbing Giant.</td>
  </tr>

  <tr>
    <td>kld support for amd64</td>
    <td>&status.wip;</td>
    <td>&a.obrien;, &a.peter;</td>
    <td>KLDs work when loaded from userland, but not from the loader.  kldxref
      might also need work.  Required for amd64 to be promoted to tier-1
      status.</td>
  </tr>

  <tr>
    <td>GDB thread support</td>
    <td>&status.wip;</td>
    <td>&a.davidxu;, &a.marcel;</td>
    <td>With improved support for threading primitives, support is now
      required to ease debugging of threaded applications.  Ideally,
      this support will work for both libthr and libkse threading
      models.</td>
  </tr>

  <tr>
    <td>Scheduler cleanup and resolution</td>
    <td>&status.wip;</td>
    <td>--</td>
    <td>Currently, two schedulers are present: SCHED_ULE (default), an
      SMP-optimized scheduler created as part of SMPng, and SCHED_4BSD,
      an SMP-adapted version of the original 4BSD scheduler.  They have
      quite different performance properties, with ULE providing strong
      interactivity characteristics, and performing quite well in a
      number of benchmarks, and 4BSD showing greater strength in IPC
      intensive user space benchmarks, such as databases.  One of these
      schedulers must be the default for 5.3, and whichever one it is,
      it requires careful measurement, analysis, and optimization before
      the release in order to address its deficiencies.</td>
  </tr>

  <tr>
    <td>Reports of UFS2 "large disk" problems</td>
    <td>&status.wip</td>
    <td>&a.scottl;</td>
    <td>There have been several reports that growfs(8) works improperly
      with large disk sizes, and other size-related nits in the current
      disk and label management tool set.  These must be resolved for
      5.3-RELEASE.</td>
  </tr>

  <tr>
    <td>DMA problems on sparc64</td>
    <td>&status.new;</td>
    <td>&a.scottl;</td>
    <td>Recent modifications to the ATA driver expect data alignment issues
      to be handled by busdma.  Support for that is missing in sparc64.</td>
  </tr>

  <tr>
    <td>Synaptics touchpad problems</td>
    <td>&status.wip;</td>
    <td>&a.philip;</td>
    <td>Synaptics updates to the psm(4) driver have resulted in poor
      interactivity for taps and button press events for some users.</td>
  </tr>

  <tr>
    <td>Increased and configurable netisr queue max depth for routing
      sockets</td>
    <td>&status.wip;</td>
    <td>&a.rwatson;</td>
    <td>As part of the MPSAFE network stack work, delivery of routing socket
      messages was moved to queued dispatch via netisr rather than direct
      dispatch from the routing code.  However, the risks of lost routing
      messages for routing daemons are high; respond by increasing the max
      depth beyond a default interface max depth of 50 to 128, and allow it
      to be user-configured.  This change is in CVS HEAD, and needs to be
      merged to RELENG_5 after testing.</td>
  </tr>

</table>

<h3>Desired features for 5.3-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

  <tr>
    <td>truss support for ptrace</td>
    <td>--</td>
    <td>--</td>
    <td>Almost all process debugging tools have been updated to use
      non-procfs kernel primitives, with the exception of truss(1).
      As procfs is considered deprecated due to its inherent security
      risks, it is highly desirable to update truss to operate in
      a post-procfs world.  &a.des; had prototype patches; &a.robert;
      is developing and testing patches now.  Support for system
      call tracing has been added to ptrace().</td>
  </tr>

  <tr>
    <td>FAST_IPSEC and KAME compatibility</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>FAST_IPSEC currently cannot be used directly with the KAME IPv6
      implementation, requiring an additional level of IP tunnel
      indirection to protect IPv6 packets when using hardware crypto
      acceleration.  This issue must be resolved so that the two
      services may more easily be used together.  Among other things,
      this will require a careful review of the handling of mbuf
      header copying and m_tag support in the KAME IPv6 code.</td>
  </tr>

  <tr>
    <td>rpc.lockd(8) stability</td>
    <td>--</td>
    <td>--</td>
    <td>A process cannot be interrupted while waiting on a lock.  Fixing
      this requires that the RPC code be taught how to deal with lock
      cancellation and interruption events.</td>
  </tr>

  <tr>
    <td>Revised kld build infrastructure</td>
    <td>&status.new;</td>
    <td>&a.peter;</td>
    <td>Kernel modules are currently built independently from a kernel
      configuration, and independently from one another, resulting in
      substantially redundant compilation of objects, as well as the
      inability to easily manage compile-time options for kernel
      objects (such as MAC, PAE, etc) that may require conditional
      compilation in the kernel modules.  In order to improve build
      performance and better support options of this sort, the
      KLD build infrastructure needs to be revamped.  &a.peter; has
      done some initial prototyping, and should be contacted before
      starting on this work.</td>
  </tr>

  <tr>
    <td>Merge of Darwin msdosfs, other fixes</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>Apple's Darwin operating system has fairly extensive improvements
      to msdosfs and other kernel services; these fixes must be reviewed
      and merged to the FreeBSD tree.</td>
  </tr>

  <tr>
  <td>Race conditions in truss</td>
  <td>Errata candidate</td>
  <td>&a.robert;</td>
  <td>Truss appears to contain a race condition during the start-up of
    debugging, which can result in truss failing to attach to the process
    before it exits.  The symptom is that truss reports that it cannot
    open the procfs node supporting the process being debugged.  A bug
    also appears to exist where in truss will hang if execve() returns
    ENOENT.  A further race appears to exist in which truss will return
    "PIOCWAIT: Input/output error" occasionally on startup.  The fix
    for this sufficiently changes process execution handling that we
    will defer the fix to post-5.0 and consider this errata.</td>
  </tr>

  <tr>
    <td>ACL_MASK override of umask support in UFS</td>
    <td>&status.new;</td>
    <td>&a.rwatson;</td>
    <td>Many systems supporting POSIX.1e ACLs permit a minor violation
      to that specification, in which the ACL_MASK entry overrides the
      umask, rather than being intersected with it.  The resulting
      semantics can be useful in group-oriented environments, and as
      such would be very helpful on FreeBSD.</td>
  </tr>

  <tr>
    <td>filedesc LOR</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>The LOR reported in PR kern/55175 needs to be fixed.  Filedesc locking
      needs to be heavily reviewed in general.</td>
  </tr>

  <tr>
    <td>MAC support for NFS Server</td>
    <td>&status.new;</td>
    <td>&a.rwatson;</td>
    <td>Currently, MAC protections are enforced only on locally originated
      file system operations (VOPs), and not on RPCs generated via the
      NFS server.  Improvements in NFS server credential handling are
      required to correct this problem, as well as the introduction of
      new entry points to properly label NFS credentials and perform
      enforcement properly.</td>
  </tr>

  <tr>
    <td>busdma in all PCI drivers</td>
    <td>&status.wip;</td>
    <td>--</td>
    <td>All PCI drivers must use busdma for DMA; no use of vtophys() will
      be permitted for any recent device driver.  ISA drivers may be 
      exempt.</td>
  </tr>

  <tr>
    <td>KSE support for alpha</td>
    <td>&status.wip;</td>
    <td>&a.marcel;</td>
    <td>Userland bits implemented, kernel bits not implemented.</td>
  </tr>

  <tr>
    <td>CAM locking</td>
    <td>&status.wip;</td>
    <td>&a.scottl;, &a.gibbs;</td>
    <td>For kernel API/ABI compatibility reasons, it would be desirable to
      have the CAM locking strategy determined and loosely implemented for
      5.3.</td>

</table>

<h3>Documentation items that must be resolved for 5.3</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>
  <tr>
    <td>i386 Floppy Installation Docs</td>
    <td>&status.done;</td>
    <td>Gavin Atkinson, &a.bmah;</td>
    <td>The installation documentation doesn't take into account the
      new floppy images (with a full kernel split across multiple
      disks).  This should be updated.</td>
  </tr>

  <tr>
    <td>Finish hardware notes trimming</td>
    <td>&status.wip;</td>
    <td>&a.simon;, &a.brueffer;</td>
    <td>Finish removing mention of individual devices in the hardware
      notes and use auto-generated lists, based on driver manual pages,
      instead.</td>
  </tr>

  <tr>
    <td>sound(4) related manual pages</td>
    <td>&status.wip;</td>
    <td>&a.ru;, &a.simon;</td>
    <td>The snd(4) and pcm(4) drivers have been renamed but their
      manual pages are still outdated.  sound(4) has to be added and
      pcm(4), csa(4), gusc(4), sbc(4), and uaudio(4) should be revised.
      Other manual pages which refer to pcm(4) (if any) should possibly
      be revised, too.  In addition, supported cards list needs to be
      updated.</td>
  </tr>

  <tr>
    <td>Sound section in the Handbook</td>
    <td>&status.wip;</td>
    <td>&a.blackend;</td>
    <td>This section is outdated, some rewrites are needed for
      5.3-RELEASE.</td>
  </tr>

  <tr>
    <td>FDP documentations related pcm(4)</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>With the snd(4) and pcm(4) drivers changes, documentations
      (FAQ) regarding the use of these drivers need an update.</td>
  </tr>

  <tr>
    <td>Early Adopter's Guide</td>
    <td>&status.wip;</td>
    <td>&a.bmah;, &a.trhodes;</td>
    <td>Xin LI pointed out that FreeBSD 5.3-RELEASE is the first
      stable release on 5.X and it is (hopefully) not for early
      adopters.  Early Adopter's Guide is still useful, but
      contains a bit old information.  Some parts of this guide
      need a rewrite, and this document should be published
      as "4.X to 5.X Migration Guide",  which focuses difference
      between 4.X and 5.X.</td>
  </tr>

  <tr>
    <td>Installation Notes</td>
    <td>&status.new;</td>
    <td>&a.trhodes;</td>
    <td>Some parts are outdated.  doc/70485 has been committed, but
      more work is needed to reflect the realities.  bmah@ pointed out
      that we should have "quick-start" installation guide for each
      platform instead of the current ones because they become too long
      and difficult to be maintained.</td>
  </tr>

  <tr>
    <td>Xorg</td>
    <td>&status.done;</td>
    <td>Ken Tom, &a.blackend;</td>
    <td>Update the X11 chapter of the Handbook for X.Org's X11
      server.</td>
  </tr>

  <tr>
    <td>rc.d scripts</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>Ch.11.4 and 11.5 of the Handbook must be updated to mention
      the new rc.d scripts and some ports use /etc/rc.conf for their
      configuration.</td>
  </tr>

  <tr>
    <td>Handbook's kernel configuration chapter</td>
    <td>&status.wip;</td>
    <td>&a.ceri;</td>
    <td>Chapter 8 must be updated to match 5.3-RELEASE.</td>
  </tr>

  <tr>
    <td>Handbook's IPsec section</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>Some parts of Section 14.10 are outdated and are not correct
      for 5.X systems.</td>
  </tr>

  <tr>
    <td>Handbook's Vinum chapter</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>Vinum chapter needs to be revised for 5.X systems.</td>
  </tr>
</table>

<h3>Testing focuses for 5.3-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>
  <tr>
    <td>SCHED_ULE as the default scheduler</td>
    <td>&status.untested;</td>
    <td>&a.jeff;</td>
    <td>SCHED_ULE provides better interactivity, higher performance, and the
      ability to support pinning and affinity.  Basic HTT scheduling policies
      should be in place for 5.3 also.</td>
  </tr>

  <tr>
    <td>make -DUSE_KQUEUE causes lockup with buildworld -jBIGNUM</td>
    <td>&status.untested;</td>
    <td>&a.green;, &a.jmg;</td>
    <td>Attempts to use make(1) with KQueues appears to result in a kernel
      hang under "heavy load".  It would be desirable to fix this
      both from the perspective of building FreeBSD quickly as a
      developer, but also because it's an instability that could show
      up under other high load and heavy use of KQueues.  See PR
      kern/57945 for a proposed patch and details.  This appear to be
      the product of a locking problem, and must be fixed for 5.3.</td>
  </tr>

  <tr>
    <td>KSE as the default threads library</td>
    <td>&status.untested;</td>
    <td>&a.davidxu;, &a.deischen;</td>
    <td>KSE has matured to the point of being more stable and POSIX-compliant
      than the traditional libc_r.  All Tier-1 platforms <b>MUST</b> have
      stable KSE support for 5.3 in order to support a consistent transition.
      Additionally, all ports that depend on the pthreads API must be modified
      to properly detect and support the default threading library.</td>
  </tr>

  <tr>
    <td>Updated binutils for all platforms</td>
    <td>&status.untested;</td>
    <td>&a.obrien;</td>
    <td>Binutils needs updating in order to support new platforms, newer GDB
      versions, and Thread Local Storage.</td>
  </tr>

  <tr>
    <td>gcc 3.3 floating point alignment regression</td>
    <td>&status.untested;</td>
    <td>&nbsp;</td>
    <td>The previous GCC 3.3 snapshot included regressions in alignment of
      floating point arguments, resulting in a substantial performance
      degradation.  The recent GCC 3.4.2 import should fix this, but more
      testing is needed.</td>
  </tr>

  <tr>
    <td>in6_pcbnotify() panic with TCP</td>
    <td>&status.untested;</td>
    <td>&a.rwatson;</td>
    <td>&a.kuriyama; has reportged a failed locking assertion with IPv6
      TCP notifications.  A patch has been committed to the CVS HEAD and
      RELENG_5 and needs further testing.</td>
  </tr>

  <tr>
    <td>Per-platform Thread-Local Storage</td>
    <td>&status.untested;</td>
    <td>&a.dfr;, &a.marcel;</td>
    <td>To complete support for thread-local storage on FreeBSD,
      per-architecture changes must be made.  Currently pending
      platforms are amd64, alpha, ia64, i386, sparc64, and powerpc.</td>
  </tr>

  <tr>
    <td>SMP instability under load</td>
    <td>&status.untested;</td>
    <td>&a.dwhite;, &a.alc;</td>
    <td>High load on SMP systems appears to result in a hard hang related
      to VM IPI.  &a.dwhite; has prepared a candidate patch that appears to
      resolve this instability, which is currently in testing for merge to
      the CVS HEAD.</td>
  </tr>

</table>

    &footer;

  </body>
</html>
