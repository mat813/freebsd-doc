<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" [
<!ENTITY base CDATA "../..">
<!ENTITY email 'freebsd-qa'>
<!ENTITY date "$FreeBSD: www/en/releases/5.2R/todo.sgml,v 1.23 2003/05/30 17:26:11 scottl Exp $">
<!ENTITY title "FreeBSD 5.2 Open Issues">
<!ENTITY % includes SYSTEM "../../includes.sgml"> %includes;
<!ENTITY % developers SYSTEM "../../developers.sgml"> %developers;
]>

<html>
&header;

<h1>Open Issues</h1>

<p>This is a list of open issues that need to be resolved for FreeBSD
  5.2.  If you have any updates for this list, please e-mail
  re@FreeBSD.org.</p>

<h3>Must Resolve Issues for 5.2-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

  <tr>
    <td>Production-quality M:N threading</td>
    <td>In progress</td>
    <td>&a.julian;, &a.davidxu;, &a.deischen;</td>
    <td>KSE M:N threading support is reaching experimental yet usable
      status on i386 for 5.1-RELEASE.  M:N threading should be
      productionable and usable on all platforms by 5.2-RELEASE.</td>
  </tr>

  <tr>
    <td>KSE support for sparc64, alpha, ia64</td>
    <td>--</td>
    <td>&a.jake;, --, --</td>
    <td>Currently, the MD elements of KSE are present only for the i386
      platform, limiting use of KSE to the i386 platform.  It is highly
      desirable to make KSE available on non-i386 platforms for
      5.2-RELEASE so that KSE can see more broad exposure, and the
      performance benefits of KSE can be visible to users of the
      64-bit FreeBSD architectures.</td>
  </tr>

  <tr>
    <td>ia64 sio support</td>
    <td>In progress</td>
    <td>&a.marcel;, &a.imp;</td>
    <td>ia64 serial console support is reported to not be functional
      on HP Itanium2 platforms.  A reworking of the sio driver to
      improve platform independence and bus handling is likely needed.</td>
  </tr>

  <tr>
    <td>FAST_IPSEC and KAME compatibility</td>
    <td>--</td>
    <td>--</td>
    <td>FAST_IPSEC currently cannot be used directly with the KAME IPv6
      implementation, requiring an additional level of IP tunnel
      indirection to protect IPv6 packets when using hardware crypto
      acceleration.  This issue must be resolved so that the two
      services may more easily be used together.  Among other things,
      this will require a careful review of the handling of mbuf
      header copying and m_tag support in the KAME IPv6 code.</td>
  </tr>

  <tr>
    <td>KAME Synchronization</td>
    <td>--</td>
    <td>--</td>
    <td>The FreeBSD KAME IPv6 code is now substantially dated with
      respect to the KAME vendor source.  The FreeBSD Project needs
      to take initiative in driving the merge of new bug fixes,
      features, et al.</td>
  </tr>

  <tr>
    <td>truss support for ptrace</td>
    <td>In progress</td>
    <td>&a.robert;</td>
    <td>Almost all process debugging tools have been updated to use
      non-procfs kernel primitives, with the exception of truss(1).
      As procfs is considered deprecated due to its inherent security
      risks, it is highly desirable to update truss to operate in
      a post-procfs world.  &a.des; had prototype patches; &a.robert;
      is developing and testing patches now.</td>
  </tr>

  <tr>
    <td>Merge of Darwin msdosfs, other fixes</td>
    <td>--</td>
    <td>--</td>
    <td>Apple's Darwin operating system has fairly extensive improvements
      to msdosfs and other kernel services; these fixes must be reviewed
      and merged to the FreeBSD tree.</td>
  </tr>

  <tr>
    <td>sparc64 adaptation of syscons</td>
    <td>In progress</td>
    <td>&a.jake;</td>
    <td>Port syscons to sparc64.  Add device drivers for sun mice
      and keyboards.  Allow for more than 3 bits of background
      colour in syscons.  Creator frame buffer device driver.  In
      the process, generally improve the MI-ness of syscons.</td>
  </tr>

  <tr>
    <td>ACL_MASK override of umask support in UFS</td>
    <td>In progress</td>
    <td>&a.rwatson;</td>
    <td>Many systems supporting POSIX.1e ACLs permit a minor violation
      to that specification, in which the ACL_MASK entry overrides the
      umask, rather than being intersected with it.  The resulting
      semantics can be useful in group-oriented environments, and as
      such would be very helpful on FreeBSD.</td>
  </tr>

  <tr>
    <td>Fine-grained network stack locking without Giant</td>
    <td>In progress</td>
    <td>&a.hsu;, &a.tanimura;</td>
    <td>Significant parts of the network stack (especially IPv4 and
      IPv6) now have fine-grained locking of their data structures.
      However, it is not yet possible for the netisr threads to run
      without Giant, due to dependencies on sockets, routing, etc.
      A 5.2-RELEASE goal is to have the network stack running largely
      without Giant, which should substantially improve performance
      of the stack, as well as other system components by reducing
      contention on Giant.</td>
  </tr>

  <tr>
    <td>ATA driver structural improvements, MPsafety</td>
    <td>In progress</td>
    <td>&a.sos;</td>
    <td>Move ATA commands into requests, so that they can be linked
      together, centralize request queue management permitting direct
      DMA of ATA commands.  These architectural changes will also
      facilitate complete MP-safety of the ATA driver suite, and
      dramatically improve support for Promise RAID controllers.</td>
  </tr>

  <tr>
    <td>Tier-1 Support for AMD64 Hammer</td>
    <td>In progress</td>
    <td>&a.peter;, &a.obrien;</td>
    <td>Productionable support for the AMD64 platform.  Currently,
      AMD64 runs fully in 32-bit emulation mode, and boots to
      single-user in 64-bit mode.  We expect full production
      support for the AMD64 architecture in 5.2-RELEASE.</td>
  </tr>

  <tr>
    <td>GCC 3.3 upgrade</td>
    <td>In progress</td>
    <td>&a.obrien; &a.kan;</td>
    <td>To properly support AMD64, a compiler upgrade is required;
      however, the new GCC 3.3 has a substantial number of new warnings
      that will disrupt application support, preventing inclusion in
      5.1-RELEASE.  This is a must-have for 5.2-RELEASE.</td>
  </tr>

  <tr>
    <td>Revised kld build infrastructure</td>
    <td>--</td>
    <td>--</td>
    <td>Kernel modules are currently built independently from a kernel
      configuration, and independently from one another, resulting in
      substantially redundant compilation of objects, as well as the
      inability to easily manage compile-time options for kernel
      objects (such as MAC, PAE, etc) that may require conditional
      compilation in the kernel modules.  In order to improve build
      performance and better support options of this sort, the
      KLD build infrastructure needs to be revamped.  &a.peter; has
      done some initial prototyping, and should be contacted before
      starting on this work.</td>
  </tr>

  <tr>
    <td>Light-weight interrupt threads, context switches</td>
    <td>--</td>
    <td>--</td>
    <td>Currently, there are two classes of interrupt handlers in 5.x:
      fast interrupt handlers which run entirely in interrupt context,
      and heavy-weight handlers which execute in a full-weight kernel
      interrupt thread.  It is possible to optimize interrupt thread
      context management such that a light-weight context switch is
      performed to begin execution of the interrupt thread in the
      handler context, and only when a full-weight context is required
      (such as sleeping on a lock) is that cost required.  This
      optimization should substantially improve interrupt latency.
      There are also additional kernel thread context switch optimizations
      that can be made to improve the performance of thread workers in
      the kernel, such as found in the network stack, crypto worker
      threads, and GEOM.  &a.bmilekic; has done substantial prototyping
      work, and should be coordinated with.</td>
  </tr>

  <tr>
    <td>Support for a fully dynamic system</td>
    <td>In progress</td>
    <td>&a.gordon;</td>
    <td>With the introduction of extensive PAM and NSS support in 5.0-RELEASE
      and 5.1-RELEASE, support for a fully dynamically linked system
      is desired.  &a.gordon; has in-progress patches to post for review
      following the 5.1 release cycle.</td>
  </tr>

  <tr>
    <td>Complete the APIC PCI interrupt routing support</td>
    <td>--</td>
    <td>--</td>
    <td>Existing interrupt routing code is not able to correctly determine
      the interrupt routing of PCI devices that are behind PCI-to-PCI
      bridges when using APIC Full Table routing (with non-legacy interrupts
      above 15).</td>
  </tr>

  <tr>
    <td>Run-time autoconfiguration of GBDE and related transforms</td>
    <td>--</td>
    <td>--</td>
    <td>Currently, gbde must be manually configured at run-time each
      time an encrypted disk device is mounted.  This prevents easy
      integration into /etc/fstab and easy automated deployment.
      Improved integration with the configuration, mounting, and boot
      process is required to make this feature more easily accessible.</td>
  </tr>

  <tr>
    <td>MAC Framework devfs path fixes</td>
    <td>In progress</td>
    <td>&a.rwatson;</td>
    <td>&a.green; has submitted patches to improve the consistency
      of the pathnames passed into the MAC Framework devfs labeling
      entry points.  These patches need to be thoroughly reviewed
      and tested, then merged.</td>
  </tr>

  <tr>
    <td>rpc.lockd(8) stability</td>
    <td>In progress</td>
    <td>&a.rwatson;</td>
    <td>A process cannot be interrupted while waiting on a lock.  Fixing
      this requires that the rpc code be taught how to deal with lock
      cancellation and interruption events.</td>
  </tr>

</table>

<h3>Desired Features for 5.2-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

  <tr>
  <td>nullfs deadlocks</td>
  <td>--</td>
  <td>--</td>
  <td>&a.kris; reports deadlocks involving the use of nullfs in the bento
    environment: buildworld -j4 with src and obj mounted via nullfs; the gcc
    processes eventually deadlocked in the ufs state.  DDB traceback
    showed two different codepaths.  I've just repeated this, so the bug
    still exists.</td>
  </tr>

  <tr>
    <td>gdb -k support for alpha</td>
    <td>--</td>
    <td>&a.mp;</td>
    <td>gdb -k doesn't work on alpha</td>
  </tr>

  <tr>
    <td>MAC support for NFS Server</td>
    <td>--</td>
    <td>&a.rwatson;</td>
    <td>Currently, MAC protections are enforced only on locally originated
      file system operations (VOPs), and not on RPCs generated via the
      NFS server.  Improvements in NFS server credential handling are
      required to correct this problem, as well as the introduction of
      new entry points to properly label NFS credentials and perform
      enforcement properly.</td>
  </tr>

  <tr>
    <td>busdma in all PCI drivers</td>
    <td>--</td>
    <td>--</td>
    <td>All PCI drivers must use busdma for DMA; no use of vtophys() will
      be permitted for any recent device driver.  ISA drivers may be
      exempt.</td>
  </tr>

  <tr>
    <td>GDB thread support</td>
    <td>--</td>
    <td>--</td>
    <td>With improved support for threading primitives, support is now
      required to ease debugging of threaded applications.  Ideally,
      this support will work for both libthr and libkse threading
      models.</td>
  </tr>

</table>

<h3>Documentation items that must be resolved for 5.2</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

  <tr>
    <td>Bluetooth documentation</td>
    <td>--</td>
    <td>Pav Lucistnik</td>
    <td>It'd be nice to have some Bluetooth documentation for the
    Handbook.</td>
  </tr>

</table>

<h3>Testing focuses for 5.2-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

</table>

    &footer;

  </body>
</html>
