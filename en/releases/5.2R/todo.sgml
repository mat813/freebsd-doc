<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" [
<!ENTITY base CDATA "../..">
<!ENTITY email 'freebsd-qa'>
<!ENTITY date "$FreeBSD: www/en/releases/5.2R/todo.sgml,v 1.53 2003/11/17 05:31:05 scottl Exp $">
<!ENTITY title "FreeBSD 5.2 Open Issues">
<!ENTITY % includes SYSTEM "../../includes.sgml"> %includes;
<!ENTITY % developers SYSTEM "../../developers.sgml"> %developers;
<!-- Status levels -->
<!ENTITY status.na "<font color=green>N/A</font>">
<!ENTITY status.done "<font color=green>Done</font>">
<!ENTITY status.wip "<font color=blue>In&nbsp;progress</font>">
<!ENTITY status.untested "<font color=yellow>Needs&nbsp;testing</font>">
<!ENTITY status.new "<font color=red>Not&nbsp;done</font>">
<!ENTITY status.unknown "<font color=red>Unknown</font>">
]>

<html>
&header;

<h1>Open Issues</h1>

<p>This is a list of open issues that need to be resolved for FreeBSD
  5.2.  If you have any updates for this list, please e-mail
  re@FreeBSD.org.</p>

<h3>Show stopper defects for 5.2-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

  <tr>
    <td>Panic when rebuilding ata-raid arrays</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>The panic reported in PR kern/58228 must be fixed.</td>
  </tr>

  <tr>
    <td>pipe/VM corruption on Alpha</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>&a.kris; reports that Alpha packages builds are being silently corrupted
      and suspects pipe and vm issues.  This must be investigated and
      resolved.</td>
  </tr>

  <tr>
    <td>Turnstile assertion failure</td>
    <td>&status.new</td>
    <td>&a.jhb;</td>
    <td><code>panic: Assertion td->td_turnstile != NULL failed at ../../../kern/subr_turnstile.c:427</code> has been affecting several users on multiple platforms.</td>

  <tr>
    <td>ACPI kernel module</td>
    <td>&status.wip;</td>
    <td>&a.jhb;</td>
    <td>The new i386 interrupt code requires that ACPI be compiled into the
      kernel if it to be used.  Work is underway to restore the ability to
      load it as a module.</td>
  </tr>

</table>

<h3>Required features for 5.2-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

  <tr>
    <td>KSE support for sparc64</td>
    <td>&status.wip;</td>
    <td>&a.jake;</td>
    <td>Kernel and userland bits are implemented but untested and known to
      be incomplete.  Required for 5.2-RELEASE.</td>
  </tr>

  <tr>
    <td>KSE support for alpha</td>
    <td>&status.wip;</td>
    <td>&a.marcel;</td>
    <td>Userland bits implemented, kernel bits not implemented.  Required for
      5.2-RELEASE.</td>
  </tr>

  <tr>
    <td>Fine-grained network stack locking without Giant</td>
    <td>&status.wip;</td>
    <td>&a.sam;</td>
    <td>Significant parts of the network stack (especially IPv4 and
      IPv6) now have fine-grained locking of their data structures.
      However, it is not yet possible for the netisr threads to run
      without Giant, due to dependencies on sockets, routing, etc.
      A 5.2-RELEASE goal is to have the network stack running largely
      without Giant, which should substantially improve performance
      of the stack, as well as other system components by reducing
      contention on Giant.</td>
  </tr>

</table>

<h3>Desired features for 5.2-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

  <tr>
    <td>FAST_IPSEC and KAME compatibility</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>FAST_IPSEC currently cannot be used directly with the KAME IPv6
      implementation, requiring an additional level of IP tunnel
      indirection to protect IPv6 packets when using hardware crypto
      acceleration.  This issue must be resolved so that the two
      services may more easily be used together.  Among other things,
      this will require a careful review of the handling of mbuf
      header copying and m_tag support in the KAME IPv6 code.</td>
  </tr>

  <tr>
    <td>KAME Synchronization</td>
    <td>&status.wip;</td>
    <td>&a.ume;</td>
    <td>The FreeBSD KAME IPv6 code is now substantially dated with
      respect to the KAME vendor source.  The FreeBSD Project needs
      to take initiative in driving the merge of new bug fixes,
      features, et al.</td>
  </tr>

  <tr>
    <td>truss support for ptrace</td>
    <td>&status.wip;</td>
    <td>&a.robert;</td>
    <td>Almost all process debugging tools have been updated to use
      non-procfs kernel primitives, with the exception of truss(1).
      As procfs is considered deprecated due to its inherent security
      risks, it is highly desirable to update truss to operate in
      a post-procfs world.  &a.des; had prototype patches; &a.robert;
      is developing and testing patches now.</td>
  </tr>

  <tr>
    <td>Merge of Darwin msdosfs, other fixes</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>Apple's Darwin operating system has fairly extensive improvements
      to msdosfs and other kernel services; these fixes must be reviewed
      and merged to the FreeBSD tree.</td>
  </tr>

  <tr>
    <td>Tier-1 Support for AMD64 Hammer</td>
    <td>&status.wip;</td>
    <td>&a.peter;, &a.obrien;</td>
    <td>Productionable support for the AMD64 platform.  It currently
      meets most of the requirements for the Tier-1 classification,
      but a formal ruling must be made in time for 5.2-RELEASE.</td>
  </tr>

  <tr>
    <td>Revised kld build infrastructure</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>Kernel modules are currently built independently from a kernel
      configuration, and independently from one another, resulting in
      substantially redundant compilation of objects, as well as the
      inability to easily manage compile-time options for kernel
      objects (such as MAC, PAE, etc) that may require conditional
      compilation in the kernel modules.  In order to improve build
      performance and better support options of this sort, the
      KLD build infrastructure needs to be revamped.  &a.peter; has
      done some initial prototyping, and should be contacted before
      starting on this work.</td>
  </tr>

  <tr>
    <td>Light-weight interrupt threads, context switches</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>Currently, there are two classes of interrupt handlers in 5.x:
      fast interrupt handlers which run entirely in interrupt context,
      and heavy-weight handlers which execute in a full-weight kernel
      interrupt thread.  It is possible to optimize interrupt thread
      context management such that a light-weight context switch is
      performed to begin execution of the interrupt thread in the
      handler context, and only when a full-weight context is required
      (such as sleeping on a lock) is that cost required.  This
      optimization should substantially improve interrupt latency.
      There are also additional kernel thread context switch optimizations
      that can be made to improve the performance of thread workers in
      the kernel, such as found in the network stack, crypto worker
      threads, and GEOM.  &a.bmilekic; has done substantial prototyping
      work, and should be coordinated with.</td>
  </tr>

  <tr>
    <td>Run-time autoconfiguration of GBDE and related transforms</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>Currently, gbde must be manually configured at run-time each
      time an encrypted disk device is mounted.  This prevents easy
      integration into /etc/fstab and easy automated deployment.
      Improved integration with the configuration, mounting, and boot
      process is required to make this feature more easily accessible.</td>
  </tr>

  <tr>
    <td>rpc.lockd(8) stability</td>
    <td>&status.wip;</td>
    <td>&a.rwatson;</td>
    <td>A process cannot be interrupted while waiting on a lock.  Fixing
      this requires that the RPC code be taught how to deal with lock
      cancellation and interruption events.</td>
  </tr>

  <tr>
  <td>Race conditions in truss</td>
  <td>Errata candidate</td>
  <td>&a.robert;</td>
  <td>Truss appears to contain a race condition during the start-up of
    debugging, which can result in truss failing to attach to the process
    before it exits.  The symptom is that truss reports that it cannot
    open the procfs node supporting the process being debugged.  A bug
    also appears to exist where in truss will hang if execve() returns
    ENOENT.  A further race appears to exist in which truss will return
    "PIOCWAIT: Input/output error" occasionally on startup.  The fix
    for this sufficiently changes process execution handling that we
    will defer the fix to post-5.0 and consider this errata.</td>
  </tr>

  <tr>
    <td>gdb -k support for alpha</td>
    <td>&status.new;</td>
    <td>&a.mp;</td>
    <td>gdb -k doesn't work on alpha</td>
  </tr>

  <tr>
    <td>MAC support for NFS Server</td>
    <td>&status.new;</td>
    <td>&a.rwatson;</td>
    <td>Currently, MAC protections are enforced only on locally originated
      file system operations (VOPs), and not on RPCs generated via the
      NFS server.  Improvements in NFS server credential handling are
      required to correct this problem, as well as the introduction of
      new entry points to properly label NFS credentials and perform
      enforcement properly.</td>
  </tr>

  <tr>
    <td>busdma in all PCI drivers</td>
    <td>&status.wip;</td>
    <td>--</td>
    <td>All PCI drivers must use busdma for DMA; no use of vtophys() will
      be permitted for any recent device driver.  ISA drivers may be
      exempt.</td>
  </tr>

  <tr>
    <td>GDB thread support</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>With improved support for threading primitives, support is now
      required to ease debugging of threaded applications.  Ideally,
      this support will work for both libthr and libkse threading
      models.</td>
  </tr>

  <tr>
    <td>Per object ELF Prebinding support</td>
    <td>&status.wip;</td>
    <td>&a.mdodd;</td>
    <td><p>Prebinding reduces executable startup time by lowering the
      expense of symbol lookup, binding and relocation.  This is
      accomplished by a prebinding data file or ELF segment that
      contains intermediate lookup results allowing fast symbol binding
      and relocation, provided that dependent objects remain unchanged
      since the prebinding information was generated.</p>

    <p>The benefits of prebinding are realized when running executables
      that use a large (>10) number of shared libraries.  C++
      applications also benefit as they contain a large number of
      relocations.</p></td>
  </tr>

  <tr>
    <td>filedesc LOR</td>
    <td>&status.new;</td>
    <td>--</td>
    <td>The LOR reported in PR kern/55175 needs to be fixed.  Filedesc locking
      needs to be heavily reviewed in general.</td>
  </tr>

  <tr>
    <td>MAC Framework devfs path fixes</td>
    <td>&status.wip;</td>
    <td>&a.rwatson;</td>
    <td>&a.green; has submitted patches to improve the consistency
      of the pathnames passed into the MAC Framework devfs labeling
      entry points.  These patches need to be thoroughly reviewed
      and tested, then merged.</td>
  </tr>

  <tr>
    <td>ACL_MASK override of umask support in UFS</td>
    <td>&status.wip;</td>
    <td>&a.rwatson;</td>
    <td>Many systems supporting POSIX.1e ACLs permit a minor violation
      to that specification, in which the ACL_MASK entry overrides the
      umask, rather than being intersected with it.  The resulting
      semantics can be useful in group-oriented environments, and as
      such would be very helpful on FreeBSD.</td>
  </tr>

</table>

<h3>Documentation items desired for 5.2</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

  <tr>
    <td>Revise EAG</td>
    <td>&status.wip;</td>
    <td>&a.bmah;</td>
    <td>The Early Adopters Guide needs to be revised, hopefully for
      the last time, to reflect the state of 5.2.</td>
  </tr>

  <tr>
    <td>Trim Hardware Notes</td>
    <td>&status.wip;</td>
    <td>&a.bmah;</td>
    <td>Ongoing project to remove redundancy in documentation by
      removing lists of specific devices from the hardware notes and
      pointing readers to driver manpages.</td>
  </tr>

</table>

<h3>Testing focuses for 5.2-RELEASE</h3>

<table border=1 width="100%">
  <tr><th>Issue</th><th>Status</th><th>Responsible</th><th>Description</th>
      </tr>

  <tr>
    <td>PCM locking and performance issues</td>
    <td>&status.untested;</td>
    <td>--</td>
    <td>The PCM audio framework and device drivers have been locked and
      free of Giant for quite a while, but LOR problems persist along with
      reports of poor audio performance under load.  These problems are
      believed to have been corrected, but more testing is desired.</td>
  </tr>

  <tr>
    <td>ATA driver structural improvements, MPsafety</td>
    <td>&status.untested;</td>
    <td>&a.sos;</td>
    <td>New ATA model has arrived, supporting fine-grained locking,
      and more.  Much testing is needed to ensure no regressions.</td>
  </tr>

  <tr>
    <td>GPT support for sysinstall</td>
    <td>&status.untested;</td>
    <td>&a.marcel;</td>
    <td>Sysinstall and libdisk has been overhauled to support the GPT
      partition scheme used on ia64.</td>
  </tr>

  <tr>
    <td>Complete the APIC PCI interrupt routing support</td>
    <td>&status.untested;</td>
    <td>&a.jhb</td>
    <td>Interrupt routing on ia32 has been completely re-written to support
      ACPI hints for PCI interrupt routing, along with ACPI hints for CPU
      enumeration.</td>
  </tr>

  <tr>
    <td>ATAng crashdump causes disk corruption</td>
    <td>&status.untested;</td>
    <td>&a.sos;, &a.tegge;</td>
    <td>Performing a crashdump on an ATA device can result in a corrupted
      MBR record.  Tor has a possible patch for this.</td>
  </tr>

</table>

    &footer;

  </body>
</html>
