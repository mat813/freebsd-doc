<!DOCTYPE HTML PUBLIC "-//FreeBSD//DTD HTML 4.01 Transitional-Based Extension//EN" [
<!ENTITY base CDATA "../..">
<!ENTITY date "$FreeBSD: www/en/projects/dingo/index.sgml,v 1.21 2006/06/30 15:59:44 joel Exp $">
<!ENTITY title "FreeBSD Network Cleanup and Consolidation Project (dingo)">
<!ENTITY email 'mux'>
<!ENTITY % navinclude.developers "INCLUDE">

<!ENTITY status.na "<font color=green>N/A</font>">
<!ENTITY status.done "<font color=green>Done</font>">
<!ENTITY status.current "<font color=green>Done in CURRENT</font>">
<!ENTITY status.prototyped "<font color=blue>Prototyped</font>">
<!ENTITY status.head "<font color=orange>Merged to HEAD; RELENG_5 candidate</font>">
<!ENTITY status.new "<font color=red>New task</font>">
<!ENTITY status.unknown "<font color=red>Unknown</font>">

<!ENTITY % developers SYSTEM "../../developers.sgml"> %developers;

]>

<html>
  &header;

    <h2>Contents</h2>
    <ul>
      <li><a href="#goal">Project Goal</a></li>
      <li><a href="#tasks">Project Tasks</a></li>
    </ul>

    <a name="goal"></a>
    <h2>Project Goal</h2>

    <p>The Dingo project is a collection of work that needs to be done
    to clean up and advance the network stack.  The overriding goal is
    to remove duplicated functionality while also adding new features
    that will make FreeBSD easier to use both for the network engineer
    and experimenter and for the first time user.</p>

    <p>The Dingo project is closely related to the <a
    href="../netperf/index.html">Netperf Project</a> which is removing all
    the Giant locks from the various network stacks.</p>

    <a name="tasks"></a>
    <h2>Project Tasks</h2>

    <table class="tblbasic">
      <tr>
	<th> Task </th>
	<th> Responsible </th>
	<th> Last updated </th>
	<th> Status </th>
	<th> Notes </th>
      </tr>
      <tr>
        <td> ARP rewrite, layer 2 separation from FIB code
        <td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> luigi started but didn't finish.
     <a
	    href="http://lists.freebsd.org/pipermail/freebsd-current/2004-April/026380.html">Mail Message</a>
     <a href="http://www.freebsd.org/cgi/query-pr.cgi?pr=68692">Problem Report</a>
        </td>
     </tr>
     <tr>
       <td>Add IP_SENDIF. Get SO_BINDTODEVICE for next to free. fenner
	   likes this</td>
        <td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>Update TCP-MD5 support in FreeBSD.</td>
        <td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>Refactor PF_ROUTE as a tag-length-value based ABI</td>
        <td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td> Rework code in FreeBSD's ip_icmp.c such that ICMP responses for
	    forwarding can be throttled also. Call badport_bandlim() before
	    icmp_error()?</td>
        <td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td> Take M_PROMISC from NetBSD.</td>
        <td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>Refactor wi(4) to implement IFF_ALLMULTI in PPROMISC using M_PROMISC</td>
        <td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td>Refactor wi(4) to implement IFF_ALLMULTI in PPROMISC using
	    M_PROMISC and
	    if_ethersubr or 802.11 layer handling to throw out the promisc stuff
	    which isn't needed. Or on any hardware without
IFF_ALLMULTI</td>
      </tr>
      <tr>
	<td> Make sure mlaier's multiple inaddr on same subnet change is A-OK</td>
	<td> &nbsp; </td>
	<td> 20041212 </td>
	<td> &status.done; </td>
	<td> A bug with handling netmasked aliases was discovered, and a
	     <a href="http://lists.freebsd.org/pipermail/freebsd-net/2004-December/005850.html">patch</a>
	     has been committed.</td>
      </tr>
      <tr>
	<td>Import CARP from OpenBSD</td>
	<td> &a.glebius; </td>
	<td> 20051028 </td>
	<td> &status.done; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>Get pff(4) house in order wrt M_PROMISC</td>
        <td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>Make an(4) radiotap-aware.   80% DONE! Depends on task below</td>
        <td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>Make an(4) net80211-aware (bring in NetBSD diffs from onoe).</td>
	<td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>Bring in busdma vr(4) from netbsd</td>
	<td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>Add radiotap support to acx(4).</td>
	<td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td>In touch with darron about the firmware redistribution issue</td>	    
      </tr>
      <tr>
	<td>Import Benno's software AAL5 layer for native ATM DSL, bug him about it</td>
	<td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>Port howl's autoipd and nifd to FreeBSD --> bsd-licensed full zeroconf...</td>
	<td>Andrea Campi andrea+freebsd at webcom dot it </td>
	<td>20041212</td>
	<td>&status.prototyped; </td>
	<td></td>	    
      </tr>
      <tr>
	<td>KAME tunnel code needs to be brought in line with the tunnel mib.</td>
	<td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td>(As in, if_type should be IFT_TUNNEL).
	    This can probably be done for IFT_GIF but need review from ume/kame people.
	</td>
      </tr>
      <tr>
	<td>Take sam's new ifconfig from p4</td>
	<td> &nbsp; </td>
	<td> 20041208 </td>
	<td> &status.done; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>We need to add features to gre(4). Use dev.* sysctls.</td>
	<td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>Write a plugin for Sam's ifconfig</td>
	<td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td>RFC1701, RFC2784
    Checksum+Offset
    Sequence number
RFC1701
    Key (for multipoint tunnel support)
    Other
    Path MTU Discovery
	</td>
      </tr>
      <tr>
	<td> Investigate policy/classful routing as an option for FreeBSD.</td>
	<td> &nbsp; </td>
	<td> 20041128 </td>
	<td> &status.new; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>Nuke struct arpcom</td>
	<td> &nbsp; </td>
	<td> 20041203 </td>
	<td> &status.new; </td>
	<td>partially related to ARP rewrite</td>
      </tr>
      <tr>
	<td>Generic mechanism to attach per-subsystem data to
	  interfaces</td>
	<td> &nbsp; </td>
	<td> 20041203 </td>
	<td> &status.new; </td>
	<td>needed to clean up ng_fec and remove ac_netgraph from
	  struct arpcom.</td>
      </tr>
      <tr>
	<td>Remove struct ifnet from softc.</td>
	<td> &a.brooks;</td>
	<td> 20050617 </td>
	<td> &status.done; </td>
	<td> &nbsp; </td>
      </tr>
      <tr>
	<td>Protocol Test Harness.</td>
	<td>&a.gnn;</td>
	<td>20041212 </td>
	<td>&status.new; </td>
	<td>My plan is to write a Python program and a set of C
	language extensions for the easy creation of packet level
	tests.  The input language will be controlled by a DTD the
	input language will be a set of packets and other structures
	specified via XML.</td>
      </tr>
    </table>

  &footer;
  </body>
</html>
